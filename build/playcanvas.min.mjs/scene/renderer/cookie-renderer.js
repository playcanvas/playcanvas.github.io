import{Vec4 as t}from"../../core/math/vec4.js";import{Mat4 as e}from"../../core/math/mat4.js";import{PIXELFORMAT_RGBA8 as i,FILTER_NEAREST as r,ADDRESS_CLAMP_TO_EDGE as o}from"../../platform/graphics/constants.js";import{drawQuadWithShader as s}from"../graphics/quad-render-utils.js";import{Texture as n}from"../../platform/graphics/texture.js";import{LIGHTTYPE_OMNI as a}from"../constants.js";import{createShaderFromCode as l}from"../shader-lib/utils.js";import{LightCamera as c}from"./light-camera.js";import{BlendState as d}from"../../platform/graphics/blend-state.js";const u=new t;class h{constructor(t,e){this.device=t,this.lightTextureAtlas=e,this.blitShader2d=null,this.blitShaderCube=null,this.blitTextureId=null,this.invViewProjId=null}destroy(){}getShader(t,e){return this[t]||(this[t]=l(this.device,"\n\t\tattribute vec2 vertex_position;\n\t\tvarying vec2 uv0;\n\t\tvoid main(void) {\n\t\t\t\tgl_Position = vec4(vertex_position, 0.5, 1.0);\n\t\t\t\tuv0 = vertex_position.xy * 0.5 + 0.5;\n\t\t}",e,`cookie_renderer_${t}`)),this.blitTextureId||(this.blitTextureId=this.device.scope.resolve("blitTexture")),this.invViewProjId||(this.invViewProjId=this.device.scope.resolve("invViewProj")),this[t]}get shader2d(){return this.getShader("blitShader2d","\n\t\tvarying vec2 uv0;\n\t\tuniform sampler2D blitTexture;\n\t\tvoid main(void) {\n\t\t\t\tgl_FragColor = texture2D(blitTexture, uv0);\n\t\t}")}get shaderCube(){return this.getShader("blitShaderCube","\n\t\tvarying vec2 uv0;\n\t\tuniform samplerCube blitTexture;\n\t\tuniform mat4 invViewProj;\n\t\tvoid main(void) {\n\t\t\t\tvec4 projPos = vec4(uv0 * 2.0 - 1.0, 0.5, 1.0);\n\t\t\t\tvec4 worldPos = invViewProj * projPos;\n\t\t\t\tgl_FragColor = textureCube(blitTexture, worldPos.xyz);\n\t\t}")}static createTexture(t,e){return new n(t,{name:"CookieAtlas",width:e,height:e,format:i,cubemap:!1,mipmaps:!1,minFilter:r,magFilter:r,addressU:o,addressV:o})}initInvViewProjMatrices(){if(!h._invViewProjMatrices){h._invViewProjMatrices=[];for(let t=0;t<6;t++){const i=c.create(null,a,t),r=i.projectionMatrix,o=i.node.getLocalTransform().clone().invert();h._invViewProjMatrices[t]=(new e).mul2(r,o).invert()}}}render(t,e){if(t.enabled&&t.cookie&&t.visibleThisFrame){const i=t.numShadowFaces,r=i>1?this.shaderCube:this.shader2d,o=this.device;i>1&&this.initInvViewProjMatrices(),this.blitTextureId.setValue(t.cookie),o.setBlendState(d.DEFAULT);for(let n=0;n<i;n++){if(u.copy(t.atlasViewport),i>1){const t=u.z/3,e=this.lightTextureAtlas.cubeSlotsOffsets[n];u.x+=t*e.x,u.y+=t*e.y,u.z=t,u.w=t,this.invViewProjId.setValue(h._invViewProjMatrices[n].data)}u.mulScalar(e.colorBuffer.width),s(o,e,r,u)}}}}h._invViewProjMatrices=null;export{h as CookieRenderer};
