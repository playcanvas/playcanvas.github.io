import"../../../core/tracing.js";import{SHADERLANGUAGE_WGSL as e}from"../constants.js";import{ShaderProcessor as t}from"../shader-processor.js";class r{constructor(t){this._vertexCode=void 0,this._fragmentCode=void 0,this.vertexEntryPoint="main",this.fragmentEntryPoint="main",this.shader=t;const r=t.definition;r.shaderLanguage===e?(this._vertexCode=r.vshader,this._fragmentCode=r.fshader,this.vertexEntryPoint="vertexMain",this.fragmentEntryPoint="fragmentMain",t.ready=!0):r.processingOptions&&this.process()}destroy(e){this._vertexCode=null,this._fragmentCode=null}createShaderModule(e,t){return this.shader.device.wgpu.createShaderModule({code:e})}getVertexShaderModule(){return this.createShaderModule(this._vertexCode,"Vertex")}getFragmentShaderModule(){return this.createShaderModule(this._fragmentCode,"Fragment")}process(){const e=this.shader,r=t.run(e.device,e.definition,e);this._vertexCode=this.transpile(r.vshader,"vertex",e.definition.vshader),this._fragmentCode=this.transpile(r.fshader,"fragment",e.definition.fshader),this._vertexCode&&this._fragmentCode?e.ready=!0:e.failed=!0,e.meshUniformBufferFormat=r.meshUniformBufferFormat,e.meshBindGroupFormat=r.meshBindGroupFormat}transpile(e,t,r){try{const r=this.shader.device.glslang.compileGLSL(e,t);return this.shader.device.twgsl.convertSpirV2WGSL(r)}catch(s){console.error(`Failed to transpile webgl ${t} shader [${this.shader.label}] to WebGPU: [${s.message}]`,{processed:e,original:r,shader:this.shader})}}get vertexCode(){return this._vertexCode}get fragmentCode(){return this._fragmentCode}loseContext(){}restoreContext(e,t){}}export{r as WebgpuShader};
