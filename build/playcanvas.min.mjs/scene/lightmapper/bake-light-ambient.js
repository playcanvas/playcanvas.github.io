import{Vec3 as t}from"../../math/vec3.js";import{random as e}from"../../math/random.js";import{Color as a}from"../../math/color.js";import{Entity as i}from"../../framework/entity.js";import{SHADOW_PCF3 as o}from"../constants.js";import{BakeLight as s}from"./bake-light.js";const r=new t;class m extends s{constructor(t){const e=new i("AmbientLight");e.addComponent("light",{type:"directional",affectDynamic:!0,affectLightmapped:!1,bake:!0,bakeNumSamples:t.ambientBakeNumSamples,castShadows:!0,normalOffsetBias:.05,shadowBias:.2,shadowDistance:1,shadowResolution:2048,shadowType:o,color:a.WHITE,intensity:1,bakeDir:!1}),super(t,e.light.light)}get numVirtualLights(){return this.light.bakeNumSamples}prepareVirtualLight(t,a){e.spherePointDeterministic(r,t,a,0,this.scene.ambientBakeSpherePart),this.light._node.lookAt(r.mulScalar(-1)),this.light._node.rotateLocal(90,0,0);const i=this.scene.gammaCorrection?2.2:1,o=2*Math.PI*this.scene.ambientBakeSpherePart,s=Math.pow(o,i);this.light.intensity=Math.pow(s/a,1/i)}}export{m as BakeLightAmbient};
