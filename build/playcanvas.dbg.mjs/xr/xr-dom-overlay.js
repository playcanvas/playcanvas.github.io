/**
 * @license
 * PlayCanvas Engine v1.57.1 revision 256dd83c2 (DEBUG PROFILER)
 * Copyright 2011-2022 PlayCanvas Ltd. All rights reserved.
 */
import { platform } from '../core/platform.js';

class XrDomOverlay {
  constructor(manager) {
    this._manager = void 0;
    this._supported = platform.browser && !!window.XRDOMOverlayState;
    this._root = null;
    this._manager = manager;
  }

  get supported() {
    return this._supported;
  }

  get available() {
    return this._supported && this._manager.active && this._manager._session.domOverlayState !== null;
  }

  get state() {
    if (!this._supported || !this._manager.active || !this._manager._session.domOverlayState) return null;
    return this._manager._session.domOverlayState.type;
  }

  set root(value) {
    if (!this._supported || this._manager.active) return;
    this._root = value;
  }

  get root() {
    return this._root;
  }

}

export { XrDomOverlay };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieHItZG9tLW92ZXJsYXkuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy94ci94ci1kb20tb3ZlcmxheS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwbGF0Zm9ybSB9IGZyb20gJy4uL2NvcmUvcGxhdGZvcm0uanMnO1xuXG4vKiogQHR5cGVkZWYge2ltcG9ydCgnLi94ci1tYW5hZ2VyLmpzJykuWHJNYW5hZ2VyfSBYck1hbmFnZXIgKi9cblxuLyoqXG4gKiBET00gT3ZlcmxheSBwcm92aWRlcyB0aGUgYWJpbGl0eSB0byB1c2UgRE9NIGVsZW1lbnRzIGFzIGFuIG92ZXJsYXkgaW4gYSBXZWJYUiBBUiBzZXNzaW9uLiBJdFxuICogcmVxdWlyZXMgdGhhdCB0aGUgcm9vdCBET00gZWxlbWVudCBpcyBwcm92aWRlZCBmb3Igc2Vzc2lvbiBzdGFydC4gVGhhdCB3YXksIGlucHV0IHNvdXJjZSBzZWxlY3RcbiAqIGV2ZW50cyBhcmUgZmlyc3QgdGVzdGVkIGFnYWluc3QgRE9NIEVsZW1lbnRzIGFuZCB0aGVuIHByb3BhZ2F0ZWQgZG93biB0byB0aGUgWFIgU2Vzc2lvbi4gSWYgdGhpc1xuICogcHJvcGFnYXRpb24gaXMgbm90IGRlc2lyYWJsZSwgdXNlIHRoZSBgYmVmb3JleHJzZWxlY3RgIGV2ZW50IG9uIGEgRE9NIGVsZW1lbnQgYW5kIHRoZVxuICogYHByZXZlbnREZWZhdWx0YCBmdW5jdGlvbiB0byBzdG9wIHByb3BhZ2F0aW9uLlxuICpcbiAqIGBgYGphdmFzY3JpcHRgYGBcbiAqIGFwcC54ci5kb21PdmVybGF5LnJvb3QgPSBlbGVtZW50O1xuICogYXBwLnhyLnN0YXJ0KGNhbWVyYSwgcGMuWFJUWVBFX0FSLCBwYy5YUlNQQUNFX0xPQ0FMRkxPT1IpO1xuICogYGBgXG4gKlxuICogYGBgamF2YXNjcmlwdFxuICogLy8gRGlzYWJsZSBpbnB1dCBzb3VyY2UgZmlyaW5nIGBzZWxlY3RgIGV2ZW50IHdoZW4gc29tZSBkZXNjZW5kYW50IGVsZW1lbnQgb2YgRE9NIG92ZXJsYXkgcm9vdFxuICogLy8gaXMgdG91Y2hlZC9jbGlja2VkLiBUaGlzIGlzIHVzZWZ1bCB3aGVuIHRoZSB1c2VyIGludGVyYWN0cyB3aXRoIFVJIGVsZW1lbnRzIGFuZCB0aGVyZSBzaG91bGRcbiAqIC8vIG5vdCBiZSBgc2VsZWN0YCBldmVudHMgYmVoaW5kIFVJLlxuICogc29tZUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignYmVmb3JleHJzZWxlY3QnLCBmdW5jdGlvbiAoZXZ0KSB7XG4gKiAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gKiB9KTtcbiAqIGBgYFxuICovXG5jbGFzcyBYckRvbU92ZXJsYXkge1xuICAgIC8qKlxuICAgICAqIEB0eXBlIHtYck1hbmFnZXJ9XG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBfbWFuYWdlcjtcblxuICAgIC8qKlxuICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgX3N1cHBvcnRlZCA9IHBsYXRmb3JtLmJyb3dzZXIgJiYgISF3aW5kb3cuWFJET01PdmVybGF5U3RhdGU7XG5cbiAgICAvKipcbiAgICAgKiBAdHlwZSB7RWxlbWVudHxudWxsfVxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgX3Jvb3QgPSBudWxsO1xuXG4gICAgLyoqXG4gICAgICogRE9NIE92ZXJsYXkgcHJvdmlkZXMgdGhlIGFiaWxpdHkgdG8gdXNlIERPTSBlbGVtZW50cyBhcyBhbiBvdmVybGF5IGluIGEgV2ViWFIgQVIgc2Vzc2lvbi4gSXRcbiAgICAgKiByZXF1aXJlcyB0aGF0IHRoZSByb290IERPTSBlbGVtZW50IGlzIHByb3ZpZGVkIGZvciBzZXNzaW9uIHN0YXJ0LiBUaGF0IHdheSwgaW5wdXQgc291cmNlXG4gICAgICogc2VsZWN0IGV2ZW50cyBhcmUgZmlyc3QgdGVzdGVkIGFnYWluc3QgRE9NIEVsZW1lbnRzIGFuZCB0aGVuIHByb3BhZ2F0ZWQgZG93biB0byB0aGUgWFJcbiAgICAgKiBTZXNzaW9uLiBJZiB0aGlzIHByb3BhZ2F0aW9uIGlzIG5vdCBkZXNpcmFibGUsIHVzZSB0aGUgYGJlZm9yZXhyc2VsZWN0YCBldmVudCBvbiBhIERPTVxuICAgICAqIGVsZW1lbnQgYW5kIHRoZSBgcHJldmVudERlZmF1bHRgIGZ1bmN0aW9uIHRvIHN0b3AgcHJvcGFnYXRpb24uXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge1hyTWFuYWdlcn0gbWFuYWdlciAtIFdlYlhSIE1hbmFnZXIuXG4gICAgICogQGhpZGVjb25zdHJ1Y3RvclxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKG1hbmFnZXIpIHtcbiAgICAgICAgdGhpcy5fbWFuYWdlciA9IG1hbmFnZXI7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVHJ1ZSBpZiBET00gT3ZlcmxheSBpcyBzdXBwb3J0ZWQuXG4gICAgICpcbiAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBnZXQgc3VwcG9ydGVkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fc3VwcG9ydGVkO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRydWUgaWYgRE9NIE92ZXJsYXkgaXMgYXZhaWxhYmxlLiBJdCBjYW4gb25seSBiZSBhdmFpbGFibGUgaWYgaXQgaXMgc3VwcG9ydGVkLCBkdXJpbmcgYVxuICAgICAqIHZhbGlkIFdlYlhSIHNlc3Npb24gYW5kIGlmIGEgdmFsaWQgcm9vdCBlbGVtZW50IGlzIHByb3ZpZGVkLlxuICAgICAqXG4gICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICovXG4gICAgZ2V0IGF2YWlsYWJsZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3N1cHBvcnRlZCAmJiB0aGlzLl9tYW5hZ2VyLmFjdGl2ZSAmJiB0aGlzLl9tYW5hZ2VyLl9zZXNzaW9uLmRvbU92ZXJsYXlTdGF0ZSAhPT0gbnVsbDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTdGF0ZSBvZiB0aGUgRE9NIE92ZXJsYXksIHdoaWNoIGRlZmluZXMgaG93IHRoZSByb290IERPTSBlbGVtZW50IGlzIHJlbmRlcmVkLiBQb3NzaWJsZVxuICAgICAqIG9wdGlvbnM6XG4gICAgICpcbiAgICAgKiAtIHNjcmVlbjogU2NyZWVuIC0gaW5kaWNhdGVzIHRoYXQgdGhlIERPTSBlbGVtZW50IGlzIGNvdmVyaW5nIHdob2xlIHBoeXNpY2FsIHNjcmVlbixcbiAgICAgKiBtYXRjaGluZyBYUiB2aWV3cG9ydHMuXG4gICAgICogLSBmbG9hdGluZzogRmxvYXRpbmcgLSBpbmRpY2F0ZXMgdGhhdCB0aGUgdW5kZXJseWluZyBwbGF0Zm9ybSByZW5kZXJzIHRoZSBET00gZWxlbWVudCBhc1xuICAgICAqIGZsb2F0aW5nIGluIHNwYWNlLCB3aGljaCBjYW4gbW92ZSBkdXJpbmcgdGhlIFdlYlhSIHNlc3Npb24gb3IgYWxsb3cgdGhlIGFwcGxpY2F0aW9uIHRvIG1vdmVcbiAgICAgKiB0aGUgZWxlbWVudC5cbiAgICAgKiAtIGhlYWQtbG9ja2VkOiBIZWFkIExvY2tlZCAtIGluZGljYXRlcyB0aGF0IHRoZSBET00gZWxlbWVudCBmb2xsb3dzIHRoZSB1c2VyJ3MgaGVhZCBtb3ZlbWVudFxuICAgICAqIGNvbnNpc3RlbnRseSwgYXBwZWFyaW5nIHNpbWlsYXIgdG8gYSBoZWxtZXQgaGVhZHMtdXAgZGlzcGxheS5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtzdHJpbmd8bnVsbH1cbiAgICAgKi9cbiAgICBnZXQgc3RhdGUoKSB7XG4gICAgICAgIGlmICghdGhpcy5fc3VwcG9ydGVkIHx8ICF0aGlzLl9tYW5hZ2VyLmFjdGl2ZSB8fCAhdGhpcy5fbWFuYWdlci5fc2Vzc2lvbi5kb21PdmVybGF5U3RhdGUpXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcblxuICAgICAgICByZXR1cm4gdGhpcy5fbWFuYWdlci5fc2Vzc2lvbi5kb21PdmVybGF5U3RhdGUudHlwZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGUgRE9NIGVsZW1lbnQgdG8gYmUgdXNlZCBhcyB0aGUgcm9vdCBmb3IgRE9NIE92ZXJsYXkuIENhbiBiZSBjaGFuZ2VkIG9ubHkgb3V0c2lkZSBvZiBhblxuICAgICAqIGFjdGl2ZSBXZWJYUiBzZXNzaW9uLlxuICAgICAqXG4gICAgICogQHR5cGUge0VsZW1lbnR8bnVsbH1cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGFwcC54ci5kb21PdmVybGF5LnJvb3QgPSBlbGVtZW50O1xuICAgICAqIGFwcC54ci5zdGFydChjYW1lcmEsIHBjLlhSVFlQRV9BUiwgcGMuWFJTUEFDRV9MT0NBTEZMT09SKTtcbiAgICAgKi9cbiAgICBzZXQgcm9vdCh2YWx1ZSkge1xuICAgICAgICBpZiAoIXRoaXMuX3N1cHBvcnRlZCB8fCB0aGlzLl9tYW5hZ2VyLmFjdGl2ZSlcbiAgICAgICAgICAgIHJldHVybjtcblxuICAgICAgICB0aGlzLl9yb290ID0gdmFsdWU7XG4gICAgfVxuXG4gICAgZ2V0IHJvb3QoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9yb290O1xuICAgIH1cbn1cblxuZXhwb3J0IHsgWHJEb21PdmVybGF5IH07XG4iXSwibmFtZXMiOlsiWHJEb21PdmVybGF5IiwiY29uc3RydWN0b3IiLCJtYW5hZ2VyIiwiX21hbmFnZXIiLCJfc3VwcG9ydGVkIiwicGxhdGZvcm0iLCJicm93c2VyIiwid2luZG93IiwiWFJET01PdmVybGF5U3RhdGUiLCJfcm9vdCIsInN1cHBvcnRlZCIsImF2YWlsYWJsZSIsImFjdGl2ZSIsIl9zZXNzaW9uIiwiZG9tT3ZlcmxheVN0YXRlIiwic3RhdGUiLCJ0eXBlIiwicm9vdCIsInZhbHVlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBeUJBLE1BQU1BLFlBQU4sQ0FBbUI7RUE2QmZDLFdBQVcsQ0FBQ0MsT0FBRCxFQUFVO0FBQUEsSUFBQSxJQUFBLENBeEJyQkMsUUF3QnFCLEdBQUEsS0FBQSxDQUFBLENBQUE7SUFBQSxJQWxCckJDLENBQUFBLFVBa0JxQixHQWxCUkMsUUFBUSxDQUFDQyxPQUFULElBQW9CLENBQUMsQ0FBQ0MsTUFBTSxDQUFDQyxpQkFrQnJCLENBQUE7SUFBQSxJQVpyQkMsQ0FBQUEsS0FZcUIsR0FaYixJQVlhLENBQUE7SUFDakIsSUFBS04sQ0FBQUEsUUFBTCxHQUFnQkQsT0FBaEIsQ0FBQTtBQUNILEdBQUE7O0FBT1ksRUFBQSxJQUFUUSxTQUFTLEdBQUc7QUFDWixJQUFBLE9BQU8sS0FBS04sVUFBWixDQUFBO0FBQ0gsR0FBQTs7QUFRWSxFQUFBLElBQVRPLFNBQVMsR0FBRztBQUNaLElBQUEsT0FBTyxJQUFLUCxDQUFBQSxVQUFMLElBQW1CLElBQUEsQ0FBS0QsUUFBTCxDQUFjUyxNQUFqQyxJQUEyQyxJQUFBLENBQUtULFFBQUwsQ0FBY1UsUUFBZCxDQUF1QkMsZUFBdkIsS0FBMkMsSUFBN0YsQ0FBQTtBQUNILEdBQUE7O0FBZ0JRLEVBQUEsSUFBTEMsS0FBSyxHQUFHO0FBQ1IsSUFBQSxJQUFJLENBQUMsSUFBS1gsQ0FBQUEsVUFBTixJQUFvQixDQUFDLElBQUEsQ0FBS0QsUUFBTCxDQUFjUyxNQUFuQyxJQUE2QyxDQUFDLElBQUEsQ0FBS1QsUUFBTCxDQUFjVSxRQUFkLENBQXVCQyxlQUF6RSxFQUNJLE9BQU8sSUFBUCxDQUFBO0FBRUosSUFBQSxPQUFPLEtBQUtYLFFBQUwsQ0FBY1UsUUFBZCxDQUF1QkMsZUFBdkIsQ0FBdUNFLElBQTlDLENBQUE7QUFDSCxHQUFBOztFQVdPLElBQUpDLElBQUksQ0FBQ0MsS0FBRCxFQUFRO0lBQ1osSUFBSSxDQUFDLEtBQUtkLFVBQU4sSUFBb0IsS0FBS0QsUUFBTCxDQUFjUyxNQUF0QyxFQUNJLE9BQUE7SUFFSixJQUFLSCxDQUFBQSxLQUFMLEdBQWFTLEtBQWIsQ0FBQTtBQUNILEdBQUE7O0FBRU8sRUFBQSxJQUFKRCxJQUFJLEdBQUc7QUFDUCxJQUFBLE9BQU8sS0FBS1IsS0FBWixDQUFBO0FBQ0gsR0FBQTs7QUEzRmM7Ozs7In0=
