import"../../core/tracing.js";import{EventHandler as e}from"../../core/event-handler.js";import{platform as t}from"../../core/platform.js";import"../../core/time.js";import{CLEARFLAG_COLOR as i,CLEARFLAG_DEPTH as s,PRIMITIVE_TRIFAN as r,SEMANTIC_POSITION as a,TYPE_FLOAT32 as n,BUFFER_STATIC as h,PRIMITIVE_POINTS as o}from"./constants.js";import{BlendState as d}from"./blend-state.js";import{DepthState as l}from"./depth-state.js";import{ScopeSpace as m}from"./scope-space.js";import{VertexBuffer as f}from"./vertex-buffer.js";import{VertexFormat as u}from"./vertex-format.js";class c extends e{constructor(e){super(),this.canvas=void 0,this.isWebGPU=!1,this.scope=void 0,this.boneLimit=void 0,this.maxAnisotropy=void 0,this.maxCubeMapSize=void 0,this.maxTextureSize=void 0,this.maxVolumeSize=void 0,this.precision=void 0,this.samples=void 0,this.renderTarget=null,this.renderPassIndex=void 0,this.insideRenderPass=!1,this.supportsInstancing=void 0,this.supportsUniformBuffers=!1,this.textureFloatRenderable=void 0,this.textureHalfFloatRenderable=void 0,this.quadVertexBuffer=void 0,this.blendState=new d,this.depthState=new l,this.defaultClearOptions={color:[0,0,0,1],depth:1,stencil:0,flags:i|s},this.canvas=e,this._width=0,this._height=0,this._maxPixelRatio=t.browser?Math.min(1,window.devicePixelRatio):1,this.shaders=[],this.buffers=[],this.textures=[],this.targets=[],this._vram={tex:0,vb:0,ib:0,ub:0},this._shaderStats={vsCompiled:0,fsCompiled:0,linked:0,materialShaders:0,compileTime:0},this.initializeContextCaches(),this._drawCallsPerFrame=0,this._shaderSwitchesPerFrame=0,this._primsPerFrame=[];for(let e=o;e<=r;e++)this._primsPerFrame[e]=0;this._renderTargetCreationTime=0,this.scope=new m("Device"),this.textureBias=this.scope.resolve("textureBias"),this.textureBias.setValue(0)}postInit(){const e=new u(this,[{semantic:a,components:2,type:n}]),t=new Float32Array([-1,-1,1,-1,-1,1,1,1]);this.quadVertexBuffer=new f(this,e,4,h,t)}destroy(){var e;this.fire("destroy"),null==(e=this.quadVertexBuffer)||e.destroy(),this.quadVertexBuffer=null}onDestroyShader(e){this.fire("destroy:shader",e);const t=this.shaders.indexOf(e);-1!==t&&this.shaders.splice(t,1)}postDestroy(){this.scope=null,this.canvas=null}toJSON(e){}initializeContextCaches(){this.indexBuffer=null,this.vertexBuffers=[],this.shader=null,this.renderTarget=null}initializeRenderState(){this.blendState=new d,this.depthState=new l,this.vx=this.vy=this.vw=this.vh=0,this.sx=this.sy=this.sw=this.sh=0}setBlendState(e){}setDepthState(e){}setRenderTarget(e){this.renderTarget=e}setIndexBuffer(e){this.indexBuffer=e}setVertexBuffer(e){e&&this.vertexBuffers.push(e)}getRenderTarget(){return this.renderTarget}initRenderTarget(e){e.initialized||(e.init(),this.targets.push(e))}_isBrowserInterface(e){return this._isImageBrowserInterface(e)||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement}_isImageBrowserInterface(e){return"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement}resizeCanvas(e,t){}setResolution(e,t){this._width=e,this._height=t,this.canvas.width=e,this.canvas.height=t,this.fire(c.EVENT_RESIZE,e,t)}updateClientRect(){this.clientRect=this.canvas.getBoundingClientRect()}get width(){return this.canvas.width}get height(){return this.canvas.height}set fullscreen(e){}get fullscreen(){return!1}set maxPixelRatio(e){this._maxPixelRatio!==e&&(this._maxPixelRatio=e,this.resizeCanvas(this._width,this._height))}get maxPixelRatio(){return this._maxPixelRatio}get deviceType(){return this._deviceType}getBoneLimit(){return this.boneLimit}setBoneLimit(e){this.boneLimit=e}frameStart(){this.renderPassIndex=0}}c.EVENT_RESIZE="resizecanvas";export{c as GraphicsDevice};
