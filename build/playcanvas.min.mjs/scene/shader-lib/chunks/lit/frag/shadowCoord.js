var o="\nvoid _getShadowCoordOrtho(mat4 shadowMatrix, vec3 shadowParams, vec3 wPos) {\n\t\tdShadowCoord = (shadowMatrix * vec4(wPos, 1.0)).xyz;\n\t\tdShadowCoord.z = saturate(dShadowCoord.z) - 0.0001;\n\n\t\t#ifdef SHADOWBIAS\n\t\tdShadowCoord.z += getShadowBias(shadowParams.x, shadowParams.z);\n\t\t#endif\n}\n\nvoid _getShadowCoordPersp(mat4 shadowMatrix, vec4 shadowParams, vec3 wPos, vec3 lightDir) {\n\t\tvec4 projPos = shadowMatrix * vec4(wPos, 1.0);\n\t\tprojPos.xy /= projPos.w;\n\t\tdShadowCoord.xy = projPos.xy;\n\t\tdShadowCoord.z = length(lightDir) * shadowParams.w;\n\n\t\t#ifdef SHADOWBIAS\n\t\tdShadowCoord.z += getShadowBias(shadowParams.x, shadowParams.z);\n\t\t#endif\n}\n\nvoid getShadowCoordOrtho(mat4 shadowMatrix, vec3 shadowParams) {\n\t\t_getShadowCoordOrtho(shadowMatrix, shadowParams, vPositionW);\n}\n\nvoid getShadowCoordPersp(mat4 shadowMatrix, vec4 shadowParams, vec3 lightPos, vec3 lightDir) {\n\t\t_getShadowCoordPersp(shadowMatrix, shadowParams, vPositionW, lightDir);\n}\n\nvoid getShadowCoordPerspNormalOffset(mat4 shadowMatrix, vec4 shadowParams, vec3 lightPos, vec3 lightDir, vec3 lightDirNorm, vec3 normal) {\n\t\tfloat distScale = abs(dot(vPositionW - lightPos, lightDirNorm)); // fov?\n\t\tvec3 wPos = vPositionW + normal * shadowParams.y * clamp(1.0 - dot(normal, -lightDirNorm), 0.0, 1.0) * distScale;\n\n\t\t_getShadowCoordPersp(shadowMatrix, shadowParams, wPos, lightDir);\n}\n\nvoid getShadowCoordOrthoNormalOffset(mat4 shadowMatrix, vec3 shadowParams, vec3 lightPos, vec3 lightDir, vec3 lightDirNorm, vec3 normal) {\n\t\tvec3 wPos = vPositionW + normal * shadowParams.y * clamp(1.0 - dot(normal, -lightDirNorm), 0.0, 1.0); //0.08\n\n\t\t_getShadowCoordOrtho(shadowMatrix, shadowParams, wPos);\n}\n";export{o as default};
