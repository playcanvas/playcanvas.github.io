import{PIXELFORMAT_RGBA32F as t,PIXELFORMAT_RGBA16F as e,PIXELFORMAT_DEPTH as r,PIXELFORMAT_RGBA8 as a,FILTER_NEAREST as s,FILTER_LINEAR as o,ADDRESS_CLAMP_TO_EDGE as i,FUNC_LESS as h}from"../../platform/graphics/constants.js";import{RenderTarget as n}from"../../platform/graphics/render-target.js";import{Texture as p}from"../../platform/graphics/texture.js";import{SHADOW_VSM32 as d,SHADOW_VSM16 as c,SHADOW_PCF5 as l,SHADOW_PCF3 as u,LIGHTTYPE_OMNI as m}from"../constants.js";class f{constructor(t,e){this.texture=t,this.cached=!1,this.renderTargets=e}destroy(){this.texture&&(this.texture.destroy(),this.texture=null);const t=this.renderTargets;for(let e=0;e<t.length;e++)t[e].destroy();this.renderTargets.length=0}static getShadowFormat(s,o){return o===d?t:o===c?e:o===l||o===u&&s.supportsDepthShadow?r:a}static getShadowFiltering(t,e){return e!==u||t.supportsDepthShadow?e===d?t.extTextureFloatLinear?o:s:e===c?t.extTextureHalfFloatLinear?o:s:o:s}static create(t,e){let r=null;return r=e._type===m?this.createCubemap(t,e._shadowResolution):this.create2dMap(t,e._shadowResolution,e._shadowType),r}static createAtlas(t,e,r){const a=this.create2dMap(t,e,r),s=a.renderTargets,o=s[0];for(let t=0;t<5;t++)s.push(o);return a}static create2dMap(t,e,r){const a=this.getShadowFormat(t,r),s=this.getShadowFiltering(t,r),o=new p(t,{format:a,width:e,height:e,mipmaps:!1,minFilter:s,magFilter:s,addressU:i,addressV:i,name:"ShadowMap2D"});let d=null;return r===l||r===u&&t.supportsDepthShadow?(o.compareOnRead=!0,o.compareFunc=h,d=new n({depthBuffer:o})):d=new n({colorBuffer:o,depth:!0}),t.isWebGPU&&(d.flipY=!0),new f(o,[d])}static createCubemap(t,e){const r=new p(t,{format:a,width:e,height:e,cubemap:!0,mipmaps:!1,minFilter:s,magFilter:s,addressU:i,addressV:i,name:"ShadowMapCube"}),o=[];for(let t=0;t<6;t++){const e=new n({colorBuffer:r,face:t,depth:!0});o.push(e)}return new f(r,o)}}export{f as ShadowMap};
