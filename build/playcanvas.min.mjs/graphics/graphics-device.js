import{EventHandler as e}from"../core/event-handler.js";import{platform as t}from"../core/platform.js";import"../core/time.js";import{ScopeSpace as i}from"./scope-space.js";import{ProgramLibrary as s}from"./program-library.js";import{PRIMITIVE_TRIFAN as r,PRIMITIVE_POINTS as a}from"./constants.js";import"../core/tracing.js";class h extends e{constructor(e){super(),this.canvas=void 0,this.deviceType=void 0,this.scope=void 0,this.boneLimit=void 0,this.maxAnisotropy=void 0,this.maxCubeMapSize=void 0,this.maxTextureSize=void 0,this.maxVolumeSize=void 0,this.precision=void 0,this.renderTarget=null,this.insideRenderPass=!1,this.supportsInstancing=void 0,this.supportsUniformBuffers=!1,this.textureFloatRenderable=void 0,this.textureHalfFloatRenderable=void 0,this.canvas=e,this._width=0,this._height=0,this._maxPixelRatio=1,this.shaders=[],this.buffers=[],this.textures=[],this.targets=[],this._vram={tex:0,vb:0,ib:0,ub:0},this._shaderStats={vsCompiled:0,fsCompiled:0,linked:0,materialShaders:0,compileTime:0},this.initializeContextCaches(),this._drawCallsPerFrame=0,this._shaderSwitchesPerFrame=0,this._primsPerFrame=[];for(let e=a;e<=r;e++)this._primsPerFrame[e]=0;this._renderTargetCreationTime=0,this.scope=new i("Device"),this.textureBias=this.scope.resolve("textureBias"),this.textureBias.setValue(0),this.programLib=new s(this)}destroy(){this.fire("destroy")}postDestroy(){this.scope=null,this.canvas=null}toJSON(e){}initializeContextCaches(){this.indexBuffer=null,this.vertexBuffers=[],this.shader=null,this.renderTarget=null}getProgramLibrary(){return this.programLib}setProgramLibrary(e){this.programLib=e}setRenderTarget(e){this.renderTarget=e}setIndexBuffer(e){this.indexBuffer=e}setVertexBuffer(e){e&&this.vertexBuffers.push(e)}getRenderTarget(){return this.renderTarget}initRenderTarget(e){e.initialized||(e.init(),this.targets.push(e))}_isBrowserInterface(e){return"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap}resizeCanvas(e,i){this._width=e,this._height=i;const s=Math.min(this._maxPixelRatio,t.browser?window.devicePixelRatio:1);e=Math.floor(e*s),i=Math.floor(i*s),this.canvas.width===e&&this.canvas.height===i||(this.canvas.width=e,this.canvas.height=i,this.fire("resizecanvas",e,i))}setResolution(e,t){this._width=e,this._height=t,this.canvas.width=e,this.canvas.height=t,this.fire("resizecanvas",e,t)}updateClientRect(){this.clientRect=this.canvas.getBoundingClientRect()}get width(){return this.canvas.width}get height(){return this.canvas.height}set fullscreen(e){}get fullscreen(){return!1}set maxPixelRatio(e){this._maxPixelRatio=e,this.resizeCanvas(this._width,this._height)}get maxPixelRatio(){return this._maxPixelRatio}getBoneLimit(){return this.boneLimit}setBoneLimit(e){this.boneLimit=e}}export{h as GraphicsDevice};
