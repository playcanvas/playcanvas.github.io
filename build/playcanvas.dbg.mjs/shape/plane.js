/**
 * @license
 * PlayCanvas Engine v1.57.1 revision 256dd83c2 (DEBUG PROFILER)
 * Copyright 2011-2022 PlayCanvas Ltd. All rights reserved.
 */
import { Vec3 } from '../math/vec3.js';

const tmpVecA = new Vec3();

class Plane {
  constructor(point = new Vec3(), normal = new Vec3(0, 0, 1)) {
    this.point = point;
    this.normal = normal;
  }

  intersectsLine(start, end, point) {
    const d = -this.normal.dot(this.point);
    const d0 = this.normal.dot(start) + d;
    const d1 = this.normal.dot(end) + d;
    const t = d0 / (d0 - d1);
    const intersects = t >= 0 && t <= 1;
    if (intersects && point) point.lerp(start, end, t);
    return intersects;
  }

  intersectsRay(ray, point) {
    const pointToOrigin = tmpVecA.sub2(this.point, ray.origin);
    const t = this.normal.dot(pointToOrigin) / this.normal.dot(ray.direction);
    const intersects = t >= 0;
    if (intersects && point) point.copy(ray.direction).mulScalar(t).add(ray.origin);
    return intersects;
  }

}

export { Plane };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhbmUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zaGFwZS9wbGFuZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWZWMzIH0gZnJvbSAnLi4vbWF0aC92ZWMzLmpzJztcblxuLyoqIEB0eXBlZGVmIHtpbXBvcnQoJy4vcmF5LmpzJykuUmF5fSBSYXkgKi9cblxuY29uc3QgdG1wVmVjQSA9IG5ldyBWZWMzKCk7XG5cbi8qKlxuICogQW4gaW5maW5pdGUgcGxhbmUuXG4gKlxuICogQGlnbm9yZVxuICovXG5jbGFzcyBQbGFuZSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IFBsYW5lIGluc3RhbmNlLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtWZWMzfSBbcG9pbnRdIC0gUG9pbnQgcG9zaXRpb24gb24gdGhlIHBsYW5lLiBUaGUgY29uc3RydWN0b3IgdGFrZXMgYSByZWZlcmVuY2Ugb2ZcbiAgICAgKiB0aGlzIHBhcmFtZXRlci5cbiAgICAgKiBAcGFyYW0ge1ZlYzN9IFtub3JtYWxdIC0gTm9ybWFsIG9mIHRoZSBwbGFuZS4gVGhlIGNvbnN0cnVjdG9yIHRha2VzIGEgcmVmZXJlbmNlIG9mIHRoaXNcbiAgICAgKiBwYXJhbWV0ZXIuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IocG9pbnQgPSBuZXcgVmVjMygpLCBub3JtYWwgPSBuZXcgVmVjMygwLCAwLCAxKSkge1xuICAgICAgICB0aGlzLnBvaW50ID0gcG9pbnQ7XG4gICAgICAgIHRoaXMubm9ybWFsID0gbm9ybWFsO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRlc3QgaWYgdGhlIHBsYW5lIGludGVyc2VjdHMgYmV0d2VlbiB0d28gcG9pbnRzLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtWZWMzfSBzdGFydCAtIFN0YXJ0IHBvc2l0aW9uIG9mIGxpbmUuXG4gICAgICogQHBhcmFtIHtWZWMzfSBlbmQgLSBFbmQgcG9zaXRpb24gb2YgbGluZS5cbiAgICAgKiBAcGFyYW0ge1ZlYzN9IFtwb2ludF0gLSBJZiB0aGVyZSBpcyBhbiBpbnRlcnNlY3Rpb24sIHRoZSBpbnRlcnNlY3Rpb24gcG9pbnQgd2lsbCBiZSBjb3BpZWRcbiAgICAgKiBpbnRvIGhlcmUuXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlcmUgaXMgYW4gaW50ZXJzZWN0aW9uLlxuICAgICAqL1xuICAgIGludGVyc2VjdHNMaW5lKHN0YXJ0LCBlbmQsIHBvaW50KSB7XG4gICAgICAgIGNvbnN0IGQgPSAtdGhpcy5ub3JtYWwuZG90KHRoaXMucG9pbnQpO1xuICAgICAgICBjb25zdCBkMCA9IHRoaXMubm9ybWFsLmRvdChzdGFydCkgKyBkO1xuICAgICAgICBjb25zdCBkMSA9IHRoaXMubm9ybWFsLmRvdChlbmQpICsgZDtcblxuICAgICAgICBjb25zdCB0ID0gZDAgLyAoZDAgLSBkMSk7XG4gICAgICAgIGNvbnN0IGludGVyc2VjdHMgPSB0ID49IDAgJiYgdCA8PSAxO1xuICAgICAgICBpZiAoaW50ZXJzZWN0cyAmJiBwb2ludClcbiAgICAgICAgICAgIHBvaW50LmxlcnAoc3RhcnQsIGVuZCwgdCk7XG5cbiAgICAgICAgcmV0dXJuIGludGVyc2VjdHM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGVzdCBpZiBhIHJheSBpbnRlcnNlY3RzIHdpdGggdGhlIGluZmluaXRlIHBsYW5lLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtSYXl9IHJheSAtIFJheSB0byB0ZXN0IGFnYWluc3QgKGRpcmVjdGlvbiBtdXN0IGJlIG5vcm1hbGl6ZWQpLlxuICAgICAqIEBwYXJhbSB7VmVjM30gW3BvaW50XSAtIElmIHRoZXJlIGlzIGFuIGludGVyc2VjdGlvbiwgdGhlIGludGVyc2VjdGlvbiBwb2ludCB3aWxsIGJlIGNvcGllZFxuICAgICAqIGludG8gaGVyZS5cbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGVyZSBpcyBhbiBpbnRlcnNlY3Rpb24uXG4gICAgICovXG4gICAgaW50ZXJzZWN0c1JheShyYXksIHBvaW50KSB7XG4gICAgICAgIGNvbnN0IHBvaW50VG9PcmlnaW4gPSB0bXBWZWNBLnN1YjIodGhpcy5wb2ludCwgcmF5Lm9yaWdpbik7XG4gICAgICAgIGNvbnN0IHQgPSB0aGlzLm5vcm1hbC5kb3QocG9pbnRUb09yaWdpbikgLyB0aGlzLm5vcm1hbC5kb3QocmF5LmRpcmVjdGlvbik7XG4gICAgICAgIGNvbnN0IGludGVyc2VjdHMgPSB0ID49IDA7XG5cbiAgICAgICAgaWYgKGludGVyc2VjdHMgJiYgcG9pbnQpXG4gICAgICAgICAgICBwb2ludC5jb3B5KHJheS5kaXJlY3Rpb24pLm11bFNjYWxhcih0KS5hZGQocmF5Lm9yaWdpbik7XG5cbiAgICAgICAgcmV0dXJuIGludGVyc2VjdHM7XG4gICAgfVxufVxuXG5leHBvcnQgeyBQbGFuZSB9O1xuIl0sIm5hbWVzIjpbInRtcFZlY0EiLCJWZWMzIiwiUGxhbmUiLCJjb25zdHJ1Y3RvciIsInBvaW50Iiwibm9ybWFsIiwiaW50ZXJzZWN0c0xpbmUiLCJzdGFydCIsImVuZCIsImQiLCJkb3QiLCJkMCIsImQxIiwidCIsImludGVyc2VjdHMiLCJsZXJwIiwiaW50ZXJzZWN0c1JheSIsInJheSIsInBvaW50VG9PcmlnaW4iLCJzdWIyIiwib3JpZ2luIiwiZGlyZWN0aW9uIiwiY29weSIsIm11bFNjYWxhciIsImFkZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUlBLE1BQU1BLE9BQU8sR0FBRyxJQUFJQyxJQUFKLEVBQWhCLENBQUE7O0FBT0EsTUFBTUMsS0FBTixDQUFZO0FBU1JDLEVBQUFBLFdBQVcsQ0FBQ0MsS0FBSyxHQUFHLElBQUlILElBQUosRUFBVCxFQUFxQkksTUFBTSxHQUFHLElBQUlKLElBQUosQ0FBUyxDQUFULEVBQVksQ0FBWixFQUFlLENBQWYsQ0FBOUIsRUFBaUQ7SUFDeEQsSUFBS0csQ0FBQUEsS0FBTCxHQUFhQSxLQUFiLENBQUE7SUFDQSxJQUFLQyxDQUFBQSxNQUFMLEdBQWNBLE1BQWQsQ0FBQTtBQUNILEdBQUE7O0FBV0RDLEVBQUFBLGNBQWMsQ0FBQ0MsS0FBRCxFQUFRQyxHQUFSLEVBQWFKLEtBQWIsRUFBb0I7SUFDOUIsTUFBTUssQ0FBQyxHQUFHLENBQUMsSUFBS0osQ0FBQUEsTUFBTCxDQUFZSyxHQUFaLENBQWdCLElBQUtOLENBQUFBLEtBQXJCLENBQVgsQ0FBQTtJQUNBLE1BQU1PLEVBQUUsR0FBRyxJQUFLTixDQUFBQSxNQUFMLENBQVlLLEdBQVosQ0FBZ0JILEtBQWhCLENBQUEsR0FBeUJFLENBQXBDLENBQUE7SUFDQSxNQUFNRyxFQUFFLEdBQUcsSUFBS1AsQ0FBQUEsTUFBTCxDQUFZSyxHQUFaLENBQWdCRixHQUFoQixDQUFBLEdBQXVCQyxDQUFsQyxDQUFBO0FBRUEsSUFBQSxNQUFNSSxDQUFDLEdBQUdGLEVBQUUsSUFBSUEsRUFBRSxHQUFHQyxFQUFULENBQVosQ0FBQTtJQUNBLE1BQU1FLFVBQVUsR0FBR0QsQ0FBQyxJQUFJLENBQUwsSUFBVUEsQ0FBQyxJQUFJLENBQWxDLENBQUE7QUFDQSxJQUFBLElBQUlDLFVBQVUsSUFBSVYsS0FBbEIsRUFDSUEsS0FBSyxDQUFDVyxJQUFOLENBQVdSLEtBQVgsRUFBa0JDLEdBQWxCLEVBQXVCSyxDQUF2QixDQUFBLENBQUE7QUFFSixJQUFBLE9BQU9DLFVBQVAsQ0FBQTtBQUNILEdBQUE7O0FBVURFLEVBQUFBLGFBQWEsQ0FBQ0MsR0FBRCxFQUFNYixLQUFOLEVBQWE7QUFDdEIsSUFBQSxNQUFNYyxhQUFhLEdBQUdsQixPQUFPLENBQUNtQixJQUFSLENBQWEsSUFBS2YsQ0FBQUEsS0FBbEIsRUFBeUJhLEdBQUcsQ0FBQ0csTUFBN0IsQ0FBdEIsQ0FBQTtBQUNBLElBQUEsTUFBTVAsQ0FBQyxHQUFHLElBQUEsQ0FBS1IsTUFBTCxDQUFZSyxHQUFaLENBQWdCUSxhQUFoQixDQUFpQyxHQUFBLElBQUEsQ0FBS2IsTUFBTCxDQUFZSyxHQUFaLENBQWdCTyxHQUFHLENBQUNJLFNBQXBCLENBQTNDLENBQUE7QUFDQSxJQUFBLE1BQU1QLFVBQVUsR0FBR0QsQ0FBQyxJQUFJLENBQXhCLENBQUE7SUFFQSxJQUFJQyxVQUFVLElBQUlWLEtBQWxCLEVBQ0lBLEtBQUssQ0FBQ2tCLElBQU4sQ0FBV0wsR0FBRyxDQUFDSSxTQUFmLENBQTBCRSxDQUFBQSxTQUExQixDQUFvQ1YsQ0FBcEMsQ0FBQSxDQUF1Q1csR0FBdkMsQ0FBMkNQLEdBQUcsQ0FBQ0csTUFBL0MsQ0FBQSxDQUFBO0FBRUosSUFBQSxPQUFPTixVQUFQLENBQUE7QUFDSCxHQUFBOztBQXJETzs7OzsifQ==
