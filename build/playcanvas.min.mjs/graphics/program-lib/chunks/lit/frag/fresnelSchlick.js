var e="\n// Schlick's approximation\nvec3 getFresnel(float cosTheta, vec3 f0) {\n    float fresnel = pow(1.0 - abs(cosTheta), 5.0);\n    float glossSq = dGlossiness * dGlossiness;\n    vec3 ret = f0 + (max(vec3(glossSq), f0) - f0) * fresnel;\n    #ifdef LIT_IRIDESCENCE\n        return mix(ret, dIridescenceFresnel, vec3(dIridescence));\n    #else\n        return ret;\n    #endif    \n}\n\nfloat getFresnelCC(float cosTheta, float glossiness) {\n    float fresnel = pow(1.0 - abs(cosTheta), 5.0);\n    float glossSq = glossiness * glossiness;\n    const float f0 = 0.04;\n    return f0 + (max(glossSq, f0) - f0) * fresnel;\n}\n";export{e as default};
