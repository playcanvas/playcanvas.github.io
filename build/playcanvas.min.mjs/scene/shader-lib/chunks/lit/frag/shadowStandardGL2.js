var t="\nfloat _getShadowPCF5x5(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec3 shadowParams) {\n\t\t// http://the-witness.net/news/2013/09/shadow-mapping-summary-part-1/\n\n\t\tfloat z = shadowCoord.z;\n\t\tvec2 uv = shadowCoord.xy * shadowParams.x; // 1 unit - 1 texel\n\t\tfloat shadowMapSizeInv = 1.0 / shadowParams.x;\n\t\tvec2 base_uv = floor(uv + 0.5);\n\t\tfloat s = (uv.x + 0.5 - base_uv.x);\n\t\tfloat t = (uv.y + 0.5 - base_uv.y);\n\t\tbase_uv -= vec2(0.5);\n\t\tbase_uv *= shadowMapSizeInv;\n\n\n\t\tfloat uw0 = (4.0 - 3.0 * s);\n\t\tfloat uw1 = 7.0;\n\t\tfloat uw2 = (1.0 + 3.0 * s);\n\n\t\tfloat u0 = (3.0 - 2.0 * s) / uw0 - 2.0;\n\t\tfloat u1 = (3.0 + s) / uw1;\n\t\tfloat u2 = s / uw2 + 2.0;\n\n\t\tfloat vw0 = (4.0 - 3.0 * t);\n\t\tfloat vw1 = 7.0;\n\t\tfloat vw2 = (1.0 + 3.0 * t);\n\n\t\tfloat v0 = (3.0 - 2.0 * t) / vw0 - 2.0;\n\t\tfloat v1 = (3.0 + t) / vw1;\n\t\tfloat v2 = t / vw2 + 2.0;\n\n\t\tfloat sum = 0.0;\n\n\t\tu0 = u0 * shadowMapSizeInv + base_uv.x;\n\t\tv0 = v0 * shadowMapSizeInv + base_uv.y;\n\n\t\tu1 = u1 * shadowMapSizeInv + base_uv.x;\n\t\tv1 = v1 * shadowMapSizeInv + base_uv.y;\n\n\t\tu2 = u2 * shadowMapSizeInv + base_uv.x;\n\t\tv2 = v2 * shadowMapSizeInv + base_uv.y;\n\n\t\tsum += uw0 * vw0 * textureShadow(shadowMap, vec3(u0, v0, z));\n\t\tsum += uw1 * vw0 * textureShadow(shadowMap, vec3(u1, v0, z));\n\t\tsum += uw2 * vw0 * textureShadow(shadowMap, vec3(u2, v0, z));\n\n\t\tsum += uw0 * vw1 * textureShadow(shadowMap, vec3(u0, v1, z));\n\t\tsum += uw1 * vw1 * textureShadow(shadowMap, vec3(u1, v1, z));\n\t\tsum += uw2 * vw1 * textureShadow(shadowMap, vec3(u2, v1, z));\n\n\t\tsum += uw0 * vw2 * textureShadow(shadowMap, vec3(u0, v2, z));\n\t\tsum += uw1 * vw2 * textureShadow(shadowMap, vec3(u1, v2, z));\n\t\tsum += uw2 * vw2 * textureShadow(shadowMap, vec3(u2, v2, z));\n\n\t\tsum *= 1.0f / 144.0;\n\n\t\tsum = saturate(sum);\n\n\t\treturn sum;\n}\n\nfloat getShadowPCF5x5(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec3 shadowParams) {\n\t\treturn _getShadowPCF5x5(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams);\n}\n\nfloat getShadowSpotPCF5x5(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\t\treturn _getShadowPCF5x5(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams.xyz);\n}\n";export{t as default};
