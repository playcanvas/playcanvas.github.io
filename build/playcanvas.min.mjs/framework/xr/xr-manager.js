import"../../core/tracing.js";import{EventHandler as e}from"../../core/event-handler.js";import{platform as t}from"../../core/platform.js";import{Mat3 as i}from"../../core/math/mat3.js";import{Mat4 as s}from"../../core/math/mat4.js";import{Quat as a}from"../../core/math/quat.js";import{Vec3 as r}from"../../core/math/vec3.js";import{Vec4 as n}from"../../core/math/vec4.js";import{XRTYPE_INLINE as o,XRTYPE_VR as h,XRTYPE_AR as p,XRDEPTHSENSINGUSAGE_CPU as l,XRDEPTHSENSINGFORMAT_L8A8 as c}from"./constants.js";import{XrDepthSensing as d}from"./xr-depth-sensing.js";import{XrDomOverlay as m}from"./xr-dom-overlay.js";import{XrHitTest as _}from"./xr-hit-test.js";import{XrImageTracking as u}from"./xr-image-tracking.js";import{XrInput as v}from"./xr-input.js";import{XrLightEstimation as g}from"./xr-light-estimation.js";import{XrPlaneDetection as f}from"./xr-plane-detection.js";class w extends e{constructor(e){super(),this.app=void 0,this._supported=t.browser&&!!navigator.xr,this._available={},this._type=null,this._spaceType=null,this._session=null,this._baseLayer=null,this._referenceSpace=null,this.depthSensing=void 0,this.domOverlay=void 0,this.hitTest=void 0,this.imageTracking=void 0,this.planeDetection=void 0,this.input=void 0,this.lightEstimation=void 0,this._camera=null,this.views=[],this.viewsPool=[],this._localPosition=new r,this._localRotation=new a,this._depthNear=.1,this._depthFar=1e3,this._width=0,this._height=0,this.app=e,this._available[o]=!1,this._available[h]=!1,this._available[p]=!1,this.depthSensing=new d(this),this.domOverlay=new m(this),this.hitTest=new _(this),this.imageTracking=new u(this),this.planeDetection=new f(this),this.input=new v(this),this.lightEstimation=new g(this),this._supported&&(navigator.xr.addEventListener("devicechange",(()=>{this._deviceAvailabilityCheck()})),this._deviceAvailabilityCheck())}destroy(){this.depthSensing.destroy(),this.depthSensing=null}start(e,t,i,s){let a=s;if("object"==typeof s&&(a=s.callback),!this._available[t])return void(a&&a(new Error("XR is not available")));if(this._session)return void(a&&a(new Error("XR session is already started")));this._camera=e,this._camera.camera.xr=this,this._type=t,this._spaceType=i,this._setClipPlanes(e.nearClip,e.farClip);const r={requiredFeatures:[i],optionalFeatures:[]};if(t===p){if(r.optionalFeatures.push("light-estimation"),r.optionalFeatures.push("hit-test"),s&&(s.imageTracking&&this.imageTracking.supported&&r.optionalFeatures.push("image-tracking"),s.planeDetection&&r.optionalFeatures.push("plane-detection")),this.domOverlay.supported&&this.domOverlay.root&&(r.optionalFeatures.push("dom-overlay"),r.domOverlay={root:this.domOverlay.root}),s&&s.depthSensing&&this.depthSensing.supported){r.optionalFeatures.push("depth-sensing");const e=[l],t=[c];if(s.depthSensing.usagePreference){const t=e.indexOf(s.depthSensing.usagePreference);-1!==t&&e.splice(t,1),e.unshift(s.depthSensing.usagePreference)}if(s.depthSensing.dataFormatPreference){const e=t.indexOf(s.depthSensing.dataFormatPreference);-1!==e&&t.splice(e,1),t.unshift(s.depthSensing.dataFormatPreference)}r.depthSensing={usagePreference:e,dataFormatPreference:t}}}else t===h&&r.optionalFeatures.push("hand-tracking");s&&s.optionalFeatures&&(r.optionalFeatures=r.optionalFeatures.concat(s.optionalFeatures)),this.imageTracking.supported&&this.imageTracking.images.length?this.imageTracking.prepareImages(((e,s)=>{if(e)return a&&a(e),void this.fire("error",e);null!==s&&(r.trackedImages=s),this._onStartOptionsReady(t,i,r,a)})):this._onStartOptionsReady(t,i,r,a)}_onStartOptionsReady(e,t,i,s){navigator.xr.requestSession(e,i).then((e=>{this._onSessionStart(e,t,s)})).catch((e=>{this._camera.camera.xr=null,this._camera=null,this._type=null,this._spaceType=null,s&&s(e),this.fire("error",e)}))}end(e){this._session?(e&&this.once("end",e),this._session.end()):e&&e(new Error("XR Session is not initialized"))}isAvailable(e){return this._available[e]}_deviceAvailabilityCheck(){for(const e in this._available)this._sessionSupportCheck(e)}_sessionSupportCheck(e){navigator.xr.isSessionSupported(e).then((t=>{this._available[e]!==t&&(this._available[e]=t,this.fire("available",e,t),this.fire("available:"+e,t))})).catch((e=>{this.fire("error",e)}))}_onSessionStart(e,t,i){let s=!1;this._session=e;const a=()=>{this.fire("visibility:change",e.visibilityState)},r=()=>{this._setClipPlanes(this._camera.nearClip,this._camera.farClip)},n=()=>{this._camera&&(this._camera.off("set_nearClip",r),this._camera.off("set_farClip",r),this._camera.camera.xr=null,this._camera=null),e.removeEventListener("end",n),e.removeEventListener("visibilitychange",a),s||this.fire("end"),this._session=null,this._referenceSpace=null,this.views=[],this._width=0,this._height=0,this._type=null,this._spaceType=null,this.app.tick()};e.addEventListener("end",n),e.addEventListener("visibilitychange",a),this._camera.on("set_nearClip",r),this._camera.on("set_farClip",r);const o=this.app.graphicsDevice.maxPixelRatio/window.devicePixelRatio;this._baseLayer=new XRWebGLLayer(e,this.app.graphicsDevice.gl,{alpha:!0,depth:!0,stencil:!0,framebufferScaleFactor:o}),e.updateRenderState({baseLayer:this._baseLayer,depthNear:this._depthNear,depthFar:this._depthFar}),e.requestReferenceSpace(t).then((e=>{this._referenceSpace=e,this.app.tick(),i&&i(null),this.fire("start")})).catch((t=>{s=!0,e.end(),i&&i(t),this.fire("error",t)}))}_setClipPlanes(e,t){this._depthNear===e&&this._depthFar===t||(this._depthNear=e,this._depthFar=t,this._session&&this._session.updateRenderState({depthNear:this._depthNear,depthFar:this._depthFar}))}update(e){if(!this._session)return!1;const t=e.session.renderState.baseLayer.framebufferWidth,r=e.session.renderState.baseLayer.framebufferHeight;this._width===t&&this._height===r||(this._width=t,this._height=r,this.app.graphicsDevice.setResolution(t,r));const o=e.getViewerPose(this._referenceSpace);if(!o)return!1;const h=this.views.length,l=o.views.length;for(;l>this.views.length;){let e=this.viewsPool.pop();e||(e={viewport:new n,projMat:new s,viewMat:new s,viewOffMat:new s,viewInvMat:new s,viewInvOffMat:new s,projViewOffMat:new s,viewMat3:new i,position:new Float32Array(3),rotation:new a}),this.views.push(e)}for(;l<this.views.length;)this.viewsPool.push(this.views.pop());const c=o.transform.position,d=o.transform.orientation;this._localPosition.set(c.x,c.y,c.z),this._localRotation.set(d.x,d.y,d.z,d.w);const m=e.session.renderState.baseLayer;for(let e=0;e<o.views.length;e++){const t=o.views[e],i=this.views[e],s=m.getViewport(t);i.viewport.x=s.x,i.viewport.y=s.y,i.viewport.z=s.width,i.viewport.w=s.height,i.projMat.set(t.projectionMatrix),i.viewMat.set(t.transform.inverse.matrix),i.viewInvMat.set(t.transform.matrix)}if(0===h&&this.views.length>0){const e=new s,t=this.views[0];e.copy(t.projMat);const i=e.data,a=2*Math.atan(1/i[5])*180/Math.PI,r=i[5]/i[0],n=i[14]/(i[10]+1),o=i[14]/(i[10]-1),h=!1;this._camera.camera.setXrProperties({aspectRatio:r,farClip:n,fov:a,horizontalFov:h,nearClip:o})}return this._camera.camera._node.setLocalPosition(this._localPosition),this._camera.camera._node.setLocalRotation(this._localRotation),this.input.update(e),this._type===p&&(this.hitTest.supported&&this.hitTest.update(e),this.lightEstimation.supported&&this.lightEstimation.update(e),this.depthSensing.supported&&this.depthSensing.update(e,o&&o.views[0]),this.imageTracking.supported&&this.imageTracking.update(e),this.planeDetection.supported&&this.planeDetection.update(e)),this.fire("update",e),!0}get supported(){return this._supported}get active(){return!!this._session}get type(){return this._type}get spaceType(){return this._spaceType}get session(){return this._session}get camera(){return this._camera?this._camera.entity:null}get visibilityState(){return this._session?this._session.visibilityState:null}}export{w as XrManager};
