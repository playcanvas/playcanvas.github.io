/**
 * @license
 * PlayCanvas Engine v1.62.0 revision 818511d2b (DEBUG PROFILER)
 * Copyright 2011-2023 PlayCanvas Ltd. All rights reserved.
 */
import { Vec2 } from '../../../core/math/vec2.js';
import { math } from '../../../core/math/math.js';
import { AnimBlendTree } from './anim-blend-tree.js';

/**
 * An AnimBlendTree that calculates its weights using a 2D Cartesian algorithm based on the thesis
 * http://runevision.com/thesis/rune_skovbo_johansen_thesis.pdf Chapter 6 Section 3.
 *
 * @ignore
 */
class AnimBlendTreeCartesian2D extends AnimBlendTree {
  pointDistanceCache(i, j) {
    const pointKey = `${i}${j}`;
    if (!this._pointCache[pointKey]) {
      this._pointCache[pointKey] = this._children[j].point.clone().sub(this._children[i].point);
    }
    return this._pointCache[pointKey];
  }
  calculateWeights() {
    if (this.updateParameterValues()) return;
    let weightSum, weightedDurationSum;
    AnimBlendTreeCartesian2D._p.set(...this._parameterValues);
    weightSum = 0.0;
    weightedDurationSum = 0.0;
    for (let i = 0; i < this._children.length; i++) {
      const child = this._children[i];
      const pi = child.point;
      AnimBlendTreeCartesian2D._pip.set(AnimBlendTreeCartesian2D._p.x, AnimBlendTreeCartesian2D._p.y).sub(pi);
      let minj = Number.MAX_VALUE;
      for (let j = 0; j < this._children.length; j++) {
        if (i === j) continue;
        const pipj = this.pointDistanceCache(i, j);
        const result = math.clamp(1.0 - AnimBlendTreeCartesian2D._pip.dot(pipj) / pipj.lengthSq(), 0.0, 1.0);
        if (result < minj) minj = result;
      }
      child.weight = minj;
      weightSum += minj;
      if (this._syncAnimations) {
        weightedDurationSum += child.animTrack.duration / child.absoluteSpeed * child.weight;
      }
    }
    for (let i = 0; i < this._children.length; i++) {
      const child = this._children[i];
      child.weight = child._weight / weightSum;
      if (this._syncAnimations) {
        child.weightedSpeed = child.animTrack.duration / child.absoluteSpeed / weightedDurationSum;
      }
    }
  }
}
AnimBlendTreeCartesian2D._p = new Vec2();
AnimBlendTreeCartesian2D._pip = new Vec2();

export { AnimBlendTreeCartesian2D };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5pbS1ibGVuZC10cmVlLTJkLWNhcnRlc2lhbi5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2ZyYW1ld29yay9hbmltL2NvbnRyb2xsZXIvYW5pbS1ibGVuZC10cmVlLTJkLWNhcnRlc2lhbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWZWMyIH0gZnJvbSAnLi4vLi4vLi4vY29yZS9tYXRoL3ZlYzIuanMnO1xuaW1wb3J0IHsgbWF0aCB9IGZyb20gJy4uLy4uLy4uL2NvcmUvbWF0aC9tYXRoLmpzJztcblxuaW1wb3J0IHsgQW5pbUJsZW5kVHJlZSB9IGZyb20gJy4vYW5pbS1ibGVuZC10cmVlLmpzJztcblxuLyoqXG4gKiBBbiBBbmltQmxlbmRUcmVlIHRoYXQgY2FsY3VsYXRlcyBpdHMgd2VpZ2h0cyB1c2luZyBhIDJEIENhcnRlc2lhbiBhbGdvcml0aG0gYmFzZWQgb24gdGhlIHRoZXNpc1xuICogaHR0cDovL3J1bmV2aXNpb24uY29tL3RoZXNpcy9ydW5lX3Nrb3Zib19qb2hhbnNlbl90aGVzaXMucGRmIENoYXB0ZXIgNiBTZWN0aW9uIDMuXG4gKlxuICogQGlnbm9yZVxuICovXG5jbGFzcyBBbmltQmxlbmRUcmVlQ2FydGVzaWFuMkQgZXh0ZW5kcyBBbmltQmxlbmRUcmVlIHtcbiAgICBzdGF0aWMgX3AgPSBuZXcgVmVjMigpO1xuXG4gICAgc3RhdGljIF9waXAgPSBuZXcgVmVjMigpO1xuXG4gICAgcG9pbnREaXN0YW5jZUNhY2hlKGksIGopIHtcbiAgICAgICAgY29uc3QgcG9pbnRLZXkgPSBgJHtpfSR7an1gO1xuICAgICAgICBpZiAoIXRoaXMuX3BvaW50Q2FjaGVbcG9pbnRLZXldKSB7XG4gICAgICAgICAgICB0aGlzLl9wb2ludENhY2hlW3BvaW50S2V5XSA9IHRoaXMuX2NoaWxkcmVuW2pdLnBvaW50LmNsb25lKCkuc3ViKHRoaXMuX2NoaWxkcmVuW2ldLnBvaW50KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fcG9pbnRDYWNoZVtwb2ludEtleV07XG4gICAgfVxuXG4gICAgY2FsY3VsYXRlV2VpZ2h0cygpIHtcbiAgICAgICAgaWYgKHRoaXMudXBkYXRlUGFyYW1ldGVyVmFsdWVzKCkpIHJldHVybjtcbiAgICAgICAgbGV0IHdlaWdodFN1bSwgd2VpZ2h0ZWREdXJhdGlvblN1bTtcbiAgICAgICAgQW5pbUJsZW5kVHJlZUNhcnRlc2lhbjJELl9wLnNldCguLi50aGlzLl9wYXJhbWV0ZXJWYWx1ZXMpO1xuICAgICAgICB3ZWlnaHRTdW0gPSAwLjA7XG4gICAgICAgIHdlaWdodGVkRHVyYXRpb25TdW0gPSAwLjA7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IGNoaWxkID0gdGhpcy5fY2hpbGRyZW5baV07XG4gICAgICAgICAgICBjb25zdCBwaSA9IGNoaWxkLnBvaW50O1xuICAgICAgICAgICAgQW5pbUJsZW5kVHJlZUNhcnRlc2lhbjJELl9waXAuc2V0KEFuaW1CbGVuZFRyZWVDYXJ0ZXNpYW4yRC5fcC54LCBBbmltQmxlbmRUcmVlQ2FydGVzaWFuMkQuX3AueSkuc3ViKHBpKTtcbiAgICAgICAgICAgIGxldCBtaW5qID0gTnVtYmVyLk1BWF9WQUxVRTtcbiAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgdGhpcy5fY2hpbGRyZW4ubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICBpZiAoaSA9PT0gaikgY29udGludWU7XG4gICAgICAgICAgICAgICAgY29uc3QgcGlwaiA9IHRoaXMucG9pbnREaXN0YW5jZUNhY2hlKGksIGopO1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IG1hdGguY2xhbXAoMS4wIC0gKEFuaW1CbGVuZFRyZWVDYXJ0ZXNpYW4yRC5fcGlwLmRvdChwaXBqKSAvIHBpcGoubGVuZ3RoU3EoKSksIDAuMCwgMS4wKTtcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0IDwgbWluaikgbWluaiA9IHJlc3VsdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNoaWxkLndlaWdodCA9IG1pbmo7XG4gICAgICAgICAgICB3ZWlnaHRTdW0gKz0gbWluajtcbiAgICAgICAgICAgIGlmICh0aGlzLl9zeW5jQW5pbWF0aW9ucykge1xuICAgICAgICAgICAgICAgIHdlaWdodGVkRHVyYXRpb25TdW0gKz0gY2hpbGQuYW5pbVRyYWNrLmR1cmF0aW9uIC8gY2hpbGQuYWJzb2x1dGVTcGVlZCAqIGNoaWxkLndlaWdodDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX2NoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBjaGlsZCA9IHRoaXMuX2NoaWxkcmVuW2ldO1xuICAgICAgICAgICAgY2hpbGQud2VpZ2h0ID0gY2hpbGQuX3dlaWdodCAvIHdlaWdodFN1bTtcbiAgICAgICAgICAgIGlmICh0aGlzLl9zeW5jQW5pbWF0aW9ucykge1xuICAgICAgICAgICAgICAgIGNoaWxkLndlaWdodGVkU3BlZWQgPSBjaGlsZC5hbmltVHJhY2suZHVyYXRpb24gLyBjaGlsZC5hYnNvbHV0ZVNwZWVkIC8gd2VpZ2h0ZWREdXJhdGlvblN1bTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IHsgQW5pbUJsZW5kVHJlZUNhcnRlc2lhbjJEIH07XG4iXSwibmFtZXMiOlsiQW5pbUJsZW5kVHJlZUNhcnRlc2lhbjJEIiwiQW5pbUJsZW5kVHJlZSIsInBvaW50RGlzdGFuY2VDYWNoZSIsImkiLCJqIiwicG9pbnRLZXkiLCJfcG9pbnRDYWNoZSIsIl9jaGlsZHJlbiIsInBvaW50IiwiY2xvbmUiLCJzdWIiLCJjYWxjdWxhdGVXZWlnaHRzIiwidXBkYXRlUGFyYW1ldGVyVmFsdWVzIiwid2VpZ2h0U3VtIiwid2VpZ2h0ZWREdXJhdGlvblN1bSIsIl9wIiwic2V0IiwiX3BhcmFtZXRlclZhbHVlcyIsImxlbmd0aCIsImNoaWxkIiwicGkiLCJfcGlwIiwieCIsInkiLCJtaW5qIiwiTnVtYmVyIiwiTUFYX1ZBTFVFIiwicGlwaiIsInJlc3VsdCIsIm1hdGgiLCJjbGFtcCIsImRvdCIsImxlbmd0aFNxIiwid2VpZ2h0IiwiX3N5bmNBbmltYXRpb25zIiwiYW5pbVRyYWNrIiwiZHVyYXRpb24iLCJhYnNvbHV0ZVNwZWVkIiwiX3dlaWdodCIsIndlaWdodGVkU3BlZWQiLCJWZWMyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNQSx3QkFBd0IsU0FBU0MsYUFBYSxDQUFDO0FBS2pEQyxFQUFBQSxrQkFBa0IsQ0FBQ0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUU7QUFDckIsSUFBQSxNQUFNQyxRQUFRLEdBQUksQ0FBQSxFQUFFRixDQUFFLENBQUEsRUFBRUMsQ0FBRSxDQUFDLENBQUEsQ0FBQTtBQUMzQixJQUFBLElBQUksQ0FBQyxJQUFJLENBQUNFLFdBQVcsQ0FBQ0QsUUFBUSxDQUFDLEVBQUU7QUFDN0IsTUFBQSxJQUFJLENBQUNDLFdBQVcsQ0FBQ0QsUUFBUSxDQUFDLEdBQUcsSUFBSSxDQUFDRSxTQUFTLENBQUNILENBQUMsQ0FBQyxDQUFDSSxLQUFLLENBQUNDLEtBQUssRUFBRSxDQUFDQyxHQUFHLENBQUMsSUFBSSxDQUFDSCxTQUFTLENBQUNKLENBQUMsQ0FBQyxDQUFDSyxLQUFLLENBQUMsQ0FBQTtBQUM3RixLQUFBO0FBQ0EsSUFBQSxPQUFPLElBQUksQ0FBQ0YsV0FBVyxDQUFDRCxRQUFRLENBQUMsQ0FBQTtBQUNyQyxHQUFBO0FBRUFNLEVBQUFBLGdCQUFnQixHQUFHO0FBQ2YsSUFBQSxJQUFJLElBQUksQ0FBQ0MscUJBQXFCLEVBQUUsRUFBRSxPQUFBO0lBQ2xDLElBQUlDLFNBQVMsRUFBRUMsbUJBQW1CLENBQUE7SUFDbENkLHdCQUF3QixDQUFDZSxFQUFFLENBQUNDLEdBQUcsQ0FBQyxHQUFHLElB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
