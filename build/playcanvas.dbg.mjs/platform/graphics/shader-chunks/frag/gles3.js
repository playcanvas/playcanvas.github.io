/**
 * @license
 * PlayCanvas Engine v1.62.0 revision 818511d2b (DEBUG PROFILER)
 * Copyright 2011-2023 PlayCanvas Ltd. All rights reserved.
 */
var gles3PS = /* glsl */`
#define varying in
out highp vec4 pc_fragColor;
#define gl_FragColor pc_fragColor
#define texture2D texture
#define texture2DBias texture
#define textureCube texture
#define texture2DProj textureProj
#define texture2DLodEXT textureLod
#define texture2DProjLodEXT textureProjLod
#define textureCubeLodEXT textureLod
#define texture2DGradEXT textureGrad
#define texture2DProjGradEXT textureProjGrad
#define textureCubeGradEXT textureGrad

// sample shadows using textureGrad to remove derivates in the dynamic loops (which are used by
// clustered lighting) - as DirectX shader compiler tries to unroll the loops and takes long time
// to compile the shader. Using textureLod would be even better, but WebGl does not translate it to
// lod instruction for DirectX correctly and uses SampleCmp instead of SampleCmpLevelZero or similar.
#define textureShadow(res, uv) textureGrad(res, uv, vec2(1, 1), vec2(1, 1))

// pass / accept shadow map or texture as a function parameter, on webgl this is simply passsed as is
// but this is needed for WebGPU
#define SHADOWMAP_PASS(name) name
#define SHADOWMAP_ACCEPT(name) sampler2DShadow name
#define TEXTURE_PASS(name) name
#define TEXTURE_ACCEPT(name) sampler2D name

#define GL2
#define SUPPORTS_TEXLOD
`;

export { gles3PS as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xlczMuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9wbGF0Zm9ybS9ncmFwaGljcy9zaGFkZXItY2h1bmtzL2ZyYWcvZ2xlczMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgLyogZ2xzbCAqL2BcbiNkZWZpbmUgdmFyeWluZyBpblxub3V0IGhpZ2hwIHZlYzQgcGNfZnJhZ0NvbG9yO1xuI2RlZmluZSBnbF9GcmFnQ29sb3IgcGNfZnJhZ0NvbG9yXG4jZGVmaW5lIHRleHR1cmUyRCB0ZXh0dXJlXG4jZGVmaW5lIHRleHR1cmUyREJpYXMgdGV4dHVyZVxuI2RlZmluZSB0ZXh0dXJlQ3ViZSB0ZXh0dXJlXG4jZGVmaW5lIHRleHR1cmUyRFByb2ogdGV4dHVyZVByb2pcbiNkZWZpbmUgdGV4dHVyZTJETG9kRVhUIHRleHR1cmVMb2RcbiNkZWZpbmUgdGV4dHVyZTJEUHJvakxvZEVYVCB0ZXh0dXJlUHJvakxvZFxuI2RlZmluZSB0ZXh0dXJlQ3ViZUxvZEVYVCB0ZXh0dXJlTG9kXG4jZGVmaW5lIHRleHR1cmUyREdyYWRFWFQgdGV4dHVyZUdyYWRcbiNkZWZpbmUgdGV4dHVyZTJEUHJvakdyYWRFWFQgdGV4dHVyZVByb2pHcmFkXG4jZGVmaW5lIHRleHR1cmVDdWJlR3JhZEVYVCB0ZXh0dXJlR3JhZFxuXG4vLyBzYW1wbGUgc2hhZG93cyB1c2luZyB0ZXh0dXJlR3JhZCB0byByZW1vdmUgZGVyaXZhdGVzIGluIHRoZSBkeW5hbWljIGxvb3BzICh3aGljaCBhcmUgdXNlZCBieVxuLy8gY2x1c3RlcmVkIGxpZ2h0aW5nKSAtIGFzIERpcmVjdFggc2hhZGVyIGNvbXBpbGVyIHRyaWVzIHRvIHVucm9sbCB0aGUgbG9vcHMgYW5kIHRha2VzIGxvbmcgdGltZVxuLy8gdG8gY29tcGlsZSB0aGUgc2hhZGVyLiBVc2luZyB0ZXh0dXJlTG9kIHdvdWxkIGJlIGV2ZW4gYmV0dGVyLCBidXQgV2ViR2wgZG9lcyBub3QgdHJhbnNsYXRlIGl0IHRvXG4vLyBsb2QgaW5zdHJ1Y3Rpb24gZm9yIERpcmVjdFggY29ycmVjdGx5IGFuZCB1c2VzIFNhbXBsZUNtcCBpbnN0ZWFkIG9mIFNhbXBsZUNtcExldmVsWmVybyBvciBzaW1pbGFyLlxuI2RlZmluZSB0ZXh0dXJlU2hhZG93KHJlcywgdXYpIHRleHR1cmVHcmFkKHJlcywgdXYsIHZlYzIoMSwgMSksIHZlYzIoMSwgMSkpXG5cbi8vIHBhc3MgLyBhY2NlcHQgc2hhZG93IG1hcCBvciB0ZXh0dXJlIGFzIGEgZnVuY3Rpb24gcGFyYW1ldGVyLCBvbiB3ZWJnbCB0aGlzIGlzIHNpbXBseSBwYXNzc2VkIGFzIGlzXG4vLyBidXQgdGhpcyBpcyBuZWVkZWQgZm9yIFdlYkdQVVxuI2RlZmluZSBTSEFET1dNQVBfUEFTUyhuYW1lKSBuYW1lXG4jZGVmaW5lIFNIQURPV01BUF9BQ0NFUFQobmFtZSkgc2FtcGxlcjJEU2hhZG93IG5hbWVcbiNkZWZpbmUgVEVYVFVSRV9QQVNTKG5hbWUpIG5hbWVcbiNkZWZpbmUgVEVYVFVSRV9BQ0NFUFQobmFtZSkgc2FtcGxlcjJEIG5hbWVcblxuI2RlZmluZSBHTDJcbiNkZWZpbmUgU1VQUE9SVFNfVEVYTE9EXG5gO1xuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBZSxVQUFXLENBQUE7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7Ozs7In0=
