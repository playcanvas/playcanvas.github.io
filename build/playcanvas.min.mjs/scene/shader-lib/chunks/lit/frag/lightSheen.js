var t="\n\nfloat sheenD(vec3 normal, vec3 h, float roughness) {\n\t\tfloat invR = 1.0 / (roughness * roughness);\n\t\tfloat cos2h = max(dot(normal, h), 0.0);\n\t\tcos2h *= cos2h;\n\t\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\n\t\treturn (2.0 + invR) * pow(sin2h, invR * 0.5) / (2.0 * PI);\n}\n\nfloat sheenV(vec3 normal, vec3 viewDir, vec3 light) {\n\t\tfloat NoV = max(dot(normal, viewDir), 0.000001);\n\t\tfloat NoL = max(dot(normal, light), 0.000001);\n\t\treturn 1.0 / (4.0 * (NoL + NoV - NoL * NoV));\n}\n\nfloat getLightSpecularSheen(vec3 h, vec3 worldNormal, vec3 viewDir, vec3 lightDirNorm, float sheenGloss) {\n\t\tfloat D = sheenD(worldNormal, h, sheenGloss);\n\t\tfloat V = sheenV(worldNormal, viewDir, -lightDirNorm);\n\t\treturn D * V;\n}\n";export{t as default};
