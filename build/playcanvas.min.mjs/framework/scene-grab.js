import{PIXELFORMAT_R8_G8_B8_A8 as e,PIXELFORMAT_R8_G8_B8 as r,FILTER_NEAREST as t,FILTER_LINEAR_MIPMAP_LINEAR as n,FILTER_LINEAR as a,ADDRESS_CLAMP_TO_EDGE as i,PIXELFORMAT_DEPTHSTENCIL as s}from"../graphics/constants.js";import{RenderTarget as o}from"../graphics/render-target.js";import{Texture as l}from"../graphics/texture.js";import{LAYERID_DEPTH as d,SHADER_DEPTH as h,LAYERID_WORLD as c}from"../scene/constants.js";import{Layer as p}from"../scene/layer.js";const g=["uSceneDepthMap","uDepthMap"],u=["uSceneColorMap","texture_grabPass"];class T{constructor(t){this.application=t,this.device=t.graphicsDevice,this.layer=null,this.colorFormat=this.device.defaultFramebufferAlpha?e:r,this.device.webgl2?this.initWebGl2():this.initWebGl1()}setupUniform(e,r,t){(r?g:u).forEach((r=>e.scope.resolve(r).setValue(t)))}allocateTexture(e,r,s,o,d,h){return new l(e,{name:s,format:o,width:r?r.colorBuffer.width:e.width,height:r?r.colorBuffer.height:e.height,mipmaps:h,minFilter:d?t:h?n:a,magFilter:d?t:a,addressU:i,addressV:i})}resizeCondition(e,r,t){const n=(null==r?void 0:r.width)||t.width,a=(null==r?void 0:r.height)||t.height;return!e||n!==e.width||a!==e.height}allocateRenderTarget(e,r,t,n,a,i,s){const l=s?g:u,d=this.allocateTexture(t,r,l[0],n,a,i);return e?(e.destroyFrameBuffers(),a?e._depthBuffer=d:e._colorBuffer=d):e=new o({name:"renderTargetSceneGrab",colorBuffer:a?null:d,depthBuffer:a?d:null,depth:!a,stencil:t.supportsStencil,autoResolve:!1}),e}releaseRenderTarget(e){e&&(e.destroyTextureBuffers(),e.destroy())}initWebGl2(){const e=this.application,r=this;this.layer=new p({enabled:!1,name:"Depth",id:d,onDisable:function(){r.releaseRenderTarget(this.depthRenderTarget),this.depthRenderTarget=null,r.releaseRenderTarget(this.colorRenderTarget),this.colorRenderTarget=null},onPreRenderOpaque:function(t){const n=e.graphicsDevice,a=this.cameras[t];if(a.renderSceneColorMap){var i;r.resizeCondition(this.colorRenderTarget,null==(i=a.renderTarget)?void 0:i.colorBuffer,n)&&(r.releaseRenderTarget(this.colorRenderTarget),this.colorRenderTarget=r.allocateRenderTarget(this.colorRenderTarget,a.renderTarget,n,this.colorFormat,!1,!0,!1)),n.copyRenderTarget(n.renderTarget,this.colorRenderTarget,!0,!1),n.activeTexture(n.maxCombinedTextures-1);const e=this.colorRenderTarget.colorBuffer;n.bindTexture(e),n.gl.generateMipmap(e.impl._glTarget),r.setupUniform(n,!1,e)}var o;a.renderSceneDepthMap&&(r.resizeCondition(this.depthRenderTarget,null==(o=a.renderTarget)?void 0:o.depthBuffer,n)&&(r.releaseRenderTarget(this.depthRenderTarget),this.depthRenderTarget=r.allocateRenderTarget(this.depthRenderTarget,a.renderTarget,n,s,!0,!1,!0)),n.copyRenderTarget(n.renderTarget,this.depthRenderTarget,!1,!0),r.setupUniform(n,!0,this.depthRenderTarget.depthBuffer))},onPostRenderOpaque:function(e){}})}initWebGl1(){const r=this.application,t=this;this.layer=new p({enabled:!1,name:"Depth",id:d,shaderPass:h,onEnable:function(){this.depthRenderTarget=new o({name:"depthRenderTarget-webgl1",depth:!0,stencil:r.graphicsDevice.supportsStencil,autoResolve:!1,graphicsDevice:r.graphicsDevice}),this.renderTarget=this.depthRenderTarget},onDisable:function(){this.depthRenderTarget.destroyTextureBuffers(),this.renderTarget=null,t.releaseRenderTarget(this.colorRenderTarget),this.colorRenderTarget=null},onPostCull:function(n){const a=r.graphicsDevice,i=this.cameras[n];if(i.renderSceneDepthMap){var s;t.resizeCondition(this.depthRenderTarget,null==(s=i.renderTarget)?void 0:s.depthBuffer,a)&&(this.depthRenderTarget.destroyTextureBuffers(),this.depthRenderTarget=t.allocateRenderTarget(this.depthRenderTarget,i.renderTarget,a,e,!1,!1,!0));const o=this.instances.visibleOpaque[n],l=o.list,d=r.scene.layers,h=d.subLayerEnabled,p=d.subLayerList,g=r.scene.layers.getLayerById(c).renderTarget,u=this.cameras[n];let T=0;const f=d.layerList;for(let e=0;e<f.length;e++){const r=f[e];if(r===this)break;if(r.renderTarget!==g||!r.enabled||!h[e])continue;const t=r.cameras.indexOf(u);if(t<0)continue;let n=p[e]?r.instances.visibleTransparent[t]:r.instances.visibleOpaque[t];const a=n.length;n=n.list;for(let e=0;e<a;e++){const r=n[e];r.material&&r.material.depthWrite&&!r._noDepthDrawGl1&&(l[T]=r,T++)}}o.length=T}},onPreRenderOpaque:function(e){const n=r.graphicsDevice,a=this.cameras[e];if(a.renderSceneColorMap){var i;t.resizeCondition(this.colorRenderTarget,null==(i=a.renderTarget)?void 0:i.colorBuffer,n)&&(t.releaseRenderTarget(this.colorRenderTarget),this.colorRenderTarget=t.allocateRenderTarget(this.colorRenderTarget,a.renderTarget,n,this.colorFormat,!1,!1,!1));const e=this.colorRenderTarget._colorBuffer;e.impl._glTexture||e.impl.initialize(n,e),n.bindTexture(e);const r=n.gl;r.copyTexImage2D(r.TEXTURE_2D,0,e.impl._glFormat,0,0,e.width,e.height,0),e._needsUpload=!1,e._needsMipmapsUpload=!1,t.setupUniform(n,!1,e)}a.renderSceneDepthMap&&t.setupUniform(n,!0,this.depthRenderTarget.colorBuffer)},onDrawCall:function(){r.graphicsDevice.setColorWrite(!0,!0,!0,!0)},onPostRenderOpaque:function(e){if(this.cameras[e].renderSceneDepthMap){this.instances.visibleOpaque[e].length=0}}})}patch(e){e.onEnable=this.layer.onEnable,e.onDisable=this.layer.onDisable,e.onPreRenderOpaque=this.layer.onPreRenderOpaque,e.onPostRenderOpaque=this.layer.onPostRenderOpaque,e.shaderPass=this.layer.shaderPass,e.onPostCull=this.layer.onPostCull,e.onDrawCall=this.layer.onDrawCall}}export{T as SceneGrab};
