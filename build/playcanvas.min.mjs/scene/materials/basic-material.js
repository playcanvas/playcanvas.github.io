import"../../core/tracing.js";import{Color as r}from"../../core/math/color.js";import{ShaderProcessorOptions as o}from"../../platform/graphics/shader-processor-options.js";import{SHADERDEF_SKIN as s,SHADERDEF_SCREENSPACE as t,SHADERDEF_INSTANCING as e,SHADERDEF_MORPH_POSITION as i,SHADERDEF_MORPH_NORMAL as a,SHADERDEF_MORPH_TEXTURE_BASED as h}from"../constants.js";import{getProgramLibrary as c}from"../shader-lib/get-program-library.js";import{basic as l}from"../shader-lib/programs/basic.js";import{Material as p}from"./material.js";class m extends p{constructor(){super(),this.color=new r(1,1,1,1),this.colorUniform=new Float32Array(4),this.colorMap=null,this.vertexColors=!1}copy(r){return super.copy(r),this.color.copy(r.color),this.colorMap=r.colorMap,this.vertexColors=r.vertexColors,this}updateUniforms(r,o){this.clearParameters(),this.colorUniform[0]=this.color.r,this.colorUniform[1]=this.color.g,this.colorUniform[2]=this.color.b,this.colorUniform[3]=this.color.a,this.setParameter("uColor",this.colorUniform),this.colorMap&&this.setParameter("texture_diffuseMap",this.colorMap)}getShaderVariant(r,p,m,n,f,u,d,g,M){if(this.updateShader)return this.updateShader(r,p,m,n,f,u),this.shader;const x={skin:m&&0!=(m&s),screenSpace:m&&0!=(m&t),useInstancing:m&&0!=(m&e),useMorphPosition:m&&0!=(m&i),useMorphNormal:m&&0!=(m&a),useMorphTextureBased:m&&0!=(m&h),alphaTest:this.alphaTest>0,vertexColors:this.vertexColors,diffuseMap:!!this.colorMap,pass:f},b=new o(d,g,M),j=c(r);return j.register("basic",l),j.getProgram("basic",x,b)}}export{m as BasicMaterial};
