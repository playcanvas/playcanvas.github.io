import"../../core/tracing.js";import{SEMANTIC_POSITION as e,SEMANTIC_NORMAL as t,SEMANTIC_TANGENT as r,SEMANTIC_TEXCOORD0 as n,SEMANTIC_TEXCOORD1 as o,SEMANTIC_TEXCOORD2 as s,SEMANTIC_TEXCOORD3 as i,SEMANTIC_TEXCOORD4 as a,SEMANTIC_TEXCOORD5 as d,SEMANTIC_TEXCOORD6 as x,SEMANTIC_TEXCOORD7 as m,SEMANTIC_COLOR as c,SEMANTIC_BLENDINDICES as l,SEMANTIC_BLENDWEIGHT as v}from"./constants.js";import u from"./shader-chunks/frag/gles2.js";import g from"./shader-chunks/frag/gles3.js";import f from"./shader-chunks/vert/gles3.js";import p from"./shader-chunks/frag/webgpu.js";import h from"./shader-chunks/vert/webgpu.js";import _ from"./shader-chunks/frag/shared.js";const b={vertex_position:e,vertex_normal:t,vertex_tangent:r,vertex_texCoord0:n,vertex_texCoord1:o,vertex_texCoord2:s,vertex_texCoord3:i,vertex_texCoord4:a,vertex_texCoord5:d,vertex_texCoord6:x,vertex_texCoord7:m,vertex_color:c,vertex_boneIndices:l,vertex_boneWeights:v};class C{static createDefinition(e,t){var r,n;const o=(r,n,o,s)=>e.isWebGPU?r:e.webgl2?n:C.gl1Extensions(e,t)+o,s=null!=(r=t.name)?r:"Untitled",i=t.vertexDefines||o(h,f,""),a=C.versionCode(e)+i+_+C.getShaderNameCode(s)+t.vertexCode,d=t.fragmentDefines||o(p,g,u),x=(t.fragmentPreamble||"")+C.versionCode(e)+C.precisionCode(e)+"\n"+d+_+C.getShaderNameCode(s)+(t.fragmentCode||C.dummyFragmentCode());return{name:s,attributes:null!=(n=t.attributes)?n:C.collectAttributes(t.vertexCode),vshader:a,fshader:x,useTransformFeedback:t.useTransformFeedback}}static getShaderNameCode(e){return`#define SHADER_NAME ${e}\n`}static gl1Extensions(e,t,r){let n;return r?n=t.vertexExtensions?`${t.vertexExtensions}\n`:"":(n=t.fragmentExtensions?`${t.fragmentExtensions}\n`:"",e.extStandardDerivatives&&(n+="#extension GL_OES_standard_derivatives : enable\n"),e.extTextureLod&&(n+="#extension GL_EXT_shader_texture_lod : enable\n",n+="#define SUPPORTS_TEXLOD\n")),n}static dummyFragmentCode(){return"void main(void) {gl_FragColor = vec4(0.0);}"}static versionCode(e){return e.isWebGPU?"#version 450\n":e.webgl2?"#version 300 es\n":""}static precisionCode(e,t){let r="";t&&"highp"!==t&&"mediump"!==t&&"lowp"!==t&&(t=null),t&&("highp"===t&&"highp"!==e.maxPrecision&&(t="mediump"),"mediump"===t&&"lowp"===e.maxPrecision&&(t="lowp"));const n=t||e.precision;return e.isWebGPU?r=`precision ${n} float;\nprecision ${n} int;\n`:(r=`precision ${n} float;\n`,e.webgl2&&(r+=`precision ${n} sampler2DShadow;\n`)),r}static collectAttributes(e){const t={};let r=0,n=e.indexOf("attribute");for(;n>=0&&!(n>0&&"/"===e[n-1]);){const o=e.indexOf(";",n),s=e.lastIndexOf(" ",o),i=e.substring(s+1,o),a=b[i];void 0!==a?t[i]=a:(t[i]="ATTR"+r,r++),n=e.indexOf("attribute",n+1)}return t}}export{C as ShaderUtils};
