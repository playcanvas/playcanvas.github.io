import{DEVICETYPE_WEBGPU as e,SEMANTIC_POSITION as t,SEMANTIC_NORMAL as r,SEMANTIC_TANGENT as o,SEMANTIC_TEXCOORD0 as n,SEMANTIC_TEXCOORD1 as s,SEMANTIC_TEXCOORD2 as d,SEMANTIC_TEXCOORD3 as x,SEMANTIC_TEXCOORD4 as a,SEMANTIC_TEXCOORD5 as i,SEMANTIC_TEXCOORD6 as c,SEMANTIC_TEXCOORD7 as u,SEMANTIC_COLOR as v,SEMANTIC_BLENDINDICES as m,SEMANTIC_BLENDWEIGHT as b}from"../constants.js";import{Shader as f}from"../shader.js";import{shaderChunks as _}from"./chunks/chunks.js";import{precisionCode as g,versionCode as p,dummyFragmentCode as l}from"./programs/common.js";const h={vertex_position:t,vertex_normal:r,vertex_tangent:o,vertex_texCoord0:n,vertex_texCoord1:s,vertex_texCoord2:d,vertex_texCoord3:x,vertex_texCoord4:a,vertex_texCoord5:i,vertex_texCoord6:c,vertex_texCoord7:u,vertex_color:v,vertex_boneIndices:m,vertex_boneWeights:b};function S(e){const t={};let r=0,o=e.indexOf("attribute");for(;o>=0&&!(o>0&&"/"===e[o-1]);){const n=e.indexOf(";",o),s=e.lastIndexOf(" ",n),d=e.substring(s+1,n),x=h[d];void 0!==x?t[d]=x:(t[d]="ATTR"+r,r++),o=e.indexOf("attribute",o+1)}return t}function C(t,r,o,n=!1){let s=_[r],d=g(t)+"\n"+_[o];const x=S(s);return t.deviceType===e?(s=p(t)+_.webgpuVS+s,d=p(t)+_.webgpuPS+d):t.webgl2&&(s=p(t)+_.gles3VS+s,d=p(t)+_.gles3PS+d),new f(t,{attributes:x,vshader:s,fshader:d,useTransformFeedback:n,name:`${r}_${o}`})}function w(t,r,o,n,s=!1,d=""){const x=t.programLib._cache,a=x[n];if(void 0!==a)return a;o=g(t)+"\n"+(o||l());const i=S(r);return t.deviceType===e?(r=p(t)+_.webgpuVS+r,o=p(t)+_.webgpuPS+o):t.webgl2&&(r=p(t)+_.gles3VS+r,o=p(t)+_.gles3PS+o),x[n]=new f(t,{name:n,attributes:i,vshader:r,fshader:d+o,useTransformFeedback:s}),x[n]}_.collectAttribs=S,_.createShader=C,_.createShaderFromCode=w;export{S as collectAttribs,C as createShader,w as createShaderFromCode};
