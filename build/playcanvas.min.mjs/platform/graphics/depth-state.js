import{BitPacking as t}from"../../core/math/bit-packing.js";import{FUNC_ALWAYS as e,FUNC_LESSEQUAL as s}from"./constants.js";class a{constructor(t=s,e=!0){this.data=0,this.func=t,this.write=e}set test(t){this.func=t?s:e}get test(){return this.func!==e}set write(e){this.data=t.set(this.data,e?1:0,3)}get write(){return t.all(this.data,3)}set func(e){this.data=t.set(this.data,e,0,7)}get func(){return t.get(this.data,0,7)}copy(t){return this.data=t.data,this}clone(){return(new this.constructor).copy(this)}get key(){return this.data}equals(t){return this.data===t.data}}a.DEFAULT=Object.freeze(new a),a.NODEPTH=Object.freeze(new a(e,!1)),a.WRITEDEPTH=Object.freeze(new a(e,!0));export{a as DepthState};
