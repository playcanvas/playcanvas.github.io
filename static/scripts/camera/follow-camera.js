var FollowCamera=pc.createScript("followCamera");FollowCamera.attributes.add("target",{type:"entity",title:"Target",description:"The target entity to follow"}),FollowCamera.attributes.add("cameraOffset",{type:"vec3",default:[0,5,-10],title:"Camera Offset",description:"The local space offset with respect to the target entity coordinate system"}),FollowCamera.attributes.add("lerpAmount",{type:"number",min:0,max:1,default:.99,title:"Lerp Amount",description:"The amount to lerp the camera towards its desired position over time. The closer it is to 1, the faster the camera will move. Lerping is frame rate independent and will be correct for every frame rate."}),FollowCamera.prototype.initialize=function(){this.targetPos=new pc.Vec3,this.matrix=new pc.Mat4,this.quat=new pc.Quat,this.vec=new pc.Vec3,this.target?(this.updateTargetPosition(),this.currentPos=this.targetPos.clone()):this.currentPos=this.entity.getPosition().clone()},FollowCamera.prototype.updateTargetPosition=function(){var t=this.target.forward;this.vec.set(-t.x,0,-t.z).normalize();var e=180*Math.atan2(this.vec.x,this.vec.z)/Math.PI;this.quat.setFromEulerAngles(0,e,0),this.matrix.setTRS(this.target.getPosition(),this.quat,pc.Vec3.ONE),this.matrix.transformPoint(this.cameraOffset,this.targetPos)},FollowCamera.prototype.postUpdate=function(t){this.target&&(this.updateTargetPosition(),this.currentPos.lerp(this.currentPos,this.targetPos,1-Math.pow(1-this.lerpAmount,t)),this.entity.setPosition(this.currentPos),this.entity.lookAt(this.target.getPosition()))};