var o="\nvoid getReflDir(vec3 worldNormal, vec3 viewDir, float gloss, mat3 tbn) {\n\t\tfloat roughness = sqrt(1.0 - min(gloss, 1.0));\n\t\tfloat anisotropy = material_anisotropy * roughness;\n\t\tvec3 anisotropicDirection = anisotropy >= 0.0 ? tbn[1] : tbn[0];\n\t\tvec3 anisotropicTangent = cross(anisotropicDirection, viewDir);\n\t\tvec3 anisotropicNormal = cross(anisotropicTangent, anisotropicDirection);\n\t\tvec3 bentNormal = normalize(mix(normalize(worldNormal), normalize(anisotropicNormal), anisotropy));\n\t\tdReflDirW = reflect(-viewDir, bentNormal);\n}\n";export{o as default};
