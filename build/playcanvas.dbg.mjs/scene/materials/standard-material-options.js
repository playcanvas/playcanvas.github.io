/**
 * @license
 * PlayCanvas Engine v1.62.0 revision 818511d2b (DEBUG PROFILER)
 * Copyright 2011-2023 PlayCanvas Ltd. All rights reserved.
 */
import { LitOptions } from './lit-options.js';

/**
 * The standard material options define a set of options used to control the shader frontend shader
 * generation, such as textures, tints and multipliers.
 */
class StandardMaterialOptions {
  constructor() {
    this._pass = 0;
    this.chunks = [];
    this.forceUv1 = false;
    this.ambientTint = false;
    this.diffuseTint = false;
    this.specularTint = false;
    this.metalnessTint = false;
    this.glossTint = false;
    this.emissiveTint = false;
    this.opacityTint = false;
    this.emissiveEncoding = 'linear';
    this.lightMapEncoding = 'linear';
    this.packedNormal = false;
    this.glossInvert = false;
    this.sheenGlossInvert = false;
    this.clearCoatGlossInvert = false;
    this.litOptions = new LitOptions();
  }
  /**
   * Value of {@link Layer#shaderPass} of the Layer being rendered. Must be set to the same in
   * {@link LitOptions#pass}.
   *
   * @type {number}
   */
  set pass(p) {
    this._pass = p;
    this.litOptions._pass = p;
  }
  get pass() {
    return this._pass;
  }
}

export { StandardMaterialOptions };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhbmRhcmQtbWF0ZXJpYWwtb3B0aW9ucy5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3NjZW5lL21hdGVyaWFscy9zdGFuZGFyZC1tYXRlcmlhbC1vcHRpb25zLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExpdE9wdGlvbnMgfSBmcm9tIFwiLi9saXQtb3B0aW9ucy5qc1wiO1xuXG4vKipcbiAqIFRoZSBzdGFuZGFyZCBtYXRlcmlhbCBvcHRpb25zIGRlZmluZSBhIHNldCBvZiBvcHRpb25zIHVzZWQgdG8gY29udHJvbCB0aGUgc2hhZGVyIGZyb250ZW5kIHNoYWRlclxuICogZ2VuZXJhdGlvbiwgc3VjaCBhcyB0ZXh0dXJlcywgdGludHMgYW5kIG11bHRpcGxpZXJzLlxuICovXG5jbGFzcyBTdGFuZGFyZE1hdGVyaWFsT3B0aW9ucyB7XG4gICAgLyoqIEBwcml2YXRlICovXG4gICAgX3Bhc3MgPSAwO1xuXG4gICAgY2h1bmtzID0gW107XG5cbiAgICAvKipcbiAgICAgKiBJZiBVVjEgKHNlY29uZCBzZXQgb2YgdGV4dHVyZSBjb29yZGluYXRlcykgaXMgcmVxdWlyZWQgaW4gdGhlIHNoYWRlci4gV2lsbCBiZSBkZWNsYXJlZCBhc1xuICAgICAqIFwidlV2MVwiIGFuZCBwYXNzZWQgdG8gdGhlIGZyYWdtZW50IHNoYWRlci5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAqL1xuICAgIGZvcmNlVXYxID0gZmFsc2U7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgdmFsdWUgb2Yge0BsaW5rIFN0YW5kYXJkTWF0ZXJpYWwjYW1iaWVudFRpbnR9LlxuICAgICAqXG4gICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICovXG4gICAgYW1iaWVudFRpbnQgPSBmYWxzZTtcblxuICAgIC8qKlxuICAgICAqIERlZmluZXMgaWYge0BsaW5rIFN0YW5kYXJkTWF0ZXJpYWwjZGlmZnVzZX0gY29uc3RhbnQgc2hvdWxkIGFmZmVjdCBkaWZmdXNlIGNvbG9yLlxuICAgICAqXG4gICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICovXG4gICAgZGlmZnVzZVRpbnQgPSBmYWxzZTtcblxuICAgIC8qKlxuICAgICAqIERlZmluZXMgaWYge0BsaW5rIFN0YW5kYXJkTWF0ZXJpYWwjc3BlY3VsYXJ9IGNvbnN0YW50IHNob3VsZCBhZmZlY3Qgc3BlY3VsYXIgY29sb3IuXG4gICAgICpcbiAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBzcGVjdWxhclRpbnQgPSBmYWxzZTtcblxuICAgIC8qKlxuICAgICAqIERlZmluZXMgaWYge0BsaW5rIFN0YW5kYXJkTWF0ZXJpYWwjbWV0YWxuZXNzfSBjb25zdGFudCBzaG91bGQgYWZmZWN0IG1ldGFsbmVzcyB2YWx1ZS5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAqL1xuICAgIG1ldGFsbmVzc1RpbnQgPSBmYWxzZTtcblxuICAgIC8qKlxuICAgICAqIERlZmluZXMgaWYge0BsaW5rIFN0YW5kYXJkTWF0ZXJpYWwjZ2xvc3N9IGNvbnN0YW50IHNob3VsZCBhZmZlY3QgZ2xvc3NpbmVzcyB2YWx1ZS5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAqL1xuICAgIGdsb3NzVGludCA9IGZhbHNlO1xuXG4gICAgLyoqXG4gICAgICogRGVmaW5lcyBpZiB7QGxpbmsgU3RhbmRhcmRNYXRlcmlhbCNlbWlzc2l2ZX0gY29uc3RhbnQgc2hvdWxkIGFmZmVjdCBlbWlzc2l2ZSBjb2xvci5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAqL1xuICAgIGVtaXNzaXZlVGludCA9IGZhbHNlO1xuXG4gICAgLyoqXG4gICAgICogRGVmaW5lcyBpZiB7QGxpbmsgU3RhbmRhcmRNYXRlcmlhbCNvcGFjaXR5fSBjb25zdGFudCBzaG91bGQgYWZmZWN0IG9wYWNpdHkgdmFsdWUuXG4gICAgICpcbiAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBvcGFjaXR5VGludCA9IGZhbHNlO1xuXG4gICAgZW1pc3NpdmVFbmNvZGluZyA9ICdsaW5lYXInO1xuXG4gICAgbGlnaHRNYXBFbmNvZGluZyA9ICdsaW5lYXInO1xuXG4gICAgLyoqXG4gICAgICogSWYgbm9ybWFsIG1hcCBjb250YWlucyBYIGluIFJHQiwgWSBpbiBBbHBoYSwgYW5kIFogbXVzdCBiZSByZWNvbnN0cnVjdGVkLlxuICAgICAqXG4gICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICovXG4gICAgcGFja2VkTm9ybWFsID0gZmFsc2U7XG5cbiAgICAvKipcbiAgICAgKiBJbnZlcnQgdGhlIGdsb3NzIGNoYW5uZWwuXG4gICAgICpcbiAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBnbG9zc0ludmVydCA9IGZhbHNlO1xuXG4gICAgLyoqXG4gICAgICogSW52ZXJ0IHRoZSBzaGVlbiBnbG9zcyBjaGFubmVsLlxuICAgICAqXG4gICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICovXG4gICAgc2hlZW5HbG9zc0ludmVydCA9IGZhbHNlO1xuXG4gICAgLyoqXG4gICAgICogSW52ZXJ0IHRoZSBjbGVhcmNvYXQgZ2xvc3MgY2hhbm5lbC5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAqL1xuICAgIGNsZWFyQ29hdEdsb3NzSW52ZXJ0ID0gZmFsc2U7XG5cbiAgICBsaXRPcHRpb25zID0gbmV3IExpdE9wdGlvbnMoKTtcblxuICAgIC8qKlxuICAgICAqIFZhbHVlIG9mIHtAbGluayBMYXllciNzaGFkZXJQYXNzfSBvZiB0aGUgTGF5ZXIgYmVpbmcgcmVuZGVyZWQuIE11c3QgYmUgc2V0IHRvIHRoZSBzYW1lIGluXG4gICAgICoge0BsaW5rIExpdE9wdGlvbnMjcGFzc30uXG4gICAgICpcbiAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAqL1xuICAgIHNldCBwYXNzKHApIHtcbiAgICAgICAgdGhpcy5fcGFzcyA9IHA7XG4gICAgICAgIHRoaXMubGl0T3B0aW9ucy5fcGFzcyA9IHA7XG4gICAgfVxuXG4gICAgZ2V0IHBhc3MoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9wYXNzO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgU3RhbmRhcmRNYXRlcmlhbE9wdGlvbnMgfTtcbiJdLCJuYW1lcyI6WyJTdGFuZGFyZE1hdGVyaWFsT3B0aW9ucyIsIl9wYXNzIiwiY2h1bmtzIiwiZm9yY2VVdjEiLCJhbWJpZW50VGludCIsImRpZmZ1c2VUaW50Iiwic3BlY3VsYXJUaW50IiwibWV0YWxuZXNzVGludCIsImdsb3NzVGludCIsImVtaXNzaXZlVGludCIsIm9wYWNpdHlUaW50IiwiZW1pc3NpdmVFbmNvZGluZyIsImxpZ2h0TWFwRW5jb2RpbmciLCJwYWNrZWROb3JtYWwiLCJnbG9zc0ludmVydCIsInNoZWVuR2xvc3NJbnZlcnQiLCJjbGVhckNvYXRHbG9zc0ludmVydCIsImxpdE9wdGlvbnMiLCJMaXRPcHRpb25zIiwicGFzcyIsInAiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU1BLHVCQUF1QixDQUFDO0FBQUEsRUFBQSxXQUFBLEdBQUE7SUFBQSxJQUUxQkMsQ0FBQUEsS0FBSyxHQUFHLENBQUMsQ0FBQTtJQUFBLElBRVRDLENBQUFBLE1BQU0sR0FBRyxFQUFFLENBQUE7SUFBQSxJQVFYQyxDQUFBQSxRQUFRLEdBQUcsS0FBSyxDQUFBO0lBQUEsSUFPaEJDLENBQUFBLFdBQVcsR0FBRyxLQUFLLENBQUE7SUFBQSxJQU9uQkMsQ0FBQUEsV0FBVyxHQUFHLEtBQUssQ0FBQTtJQUFBLElBT25CQyxDQUFBQSxZQUFZLEdBQUcsS0FBSyxDQUFBO0lBQUEsSUFPcEJDLENBQUFBLGFBQWEsR0FBRyxLQUFLLENBQUE7SUFBQSxJQU9yQkMsQ0FBQUEsU0FBUyxHQUFHLEtBQUssQ0FBQTtJQUFBLElBT2pCQyxDQUFBQSxZQUFZLEdBQUcsS0FBSyxDQUFBO0lBQUEsSUFPcEJDLENBQUFBLFdBQVcsR0FBRyxLQUFLLENBQUE7SUFBQSxJQUVuQkMsQ0FBQUEsZ0JBQWdCLEdBQUcsUUFBUSxDQUFBO0lBQUEsSUFFM0JDLENBQUFBLGdCQUFnQixHQUFHLFFBQVEsQ0FBQTtJQUFBLElBTzNCQyxDQUFBQSxZQUFZLEdBQUcsS0FBSyxDQUFBO0lBQUEsSUFPcEJDLENBQUFBLFdBQVcsR0FBRyxLQUFLLENBQUE7SUFBQSxJQU9uQkMsQ0FBQUEsZ0JBQWdCLEdBQUcsS0FBSyxDQUFBO0lBQUEsSUFPeEJDLENBQUFBLG9CQUFvQixHQUFHLEtBQUssQ0FBQTtBQUFBLElBQUEsSUFBQSxDQUU1QkMsVUFBVSxHQUFHLElBQUlDLFVBQVUsRUFBRSxDQUFBO0FBQUEsR0FBQTtBQUU3QjtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDSSxJQUFJQyxJQUFJLENBQUNDLENBQUMsRUFBRTtJQUNSLElBQUksQ0FBQ25CLEtBQUssR0FBR21CLENBQUMsQ0FBQTtBQUNkLElBQUEsSUFBSSxDQUFDSCxVQUFVLENBQUNoQixLQUFLLEdBQUdtQixDQUFDLENBQUE7QUFDN0IsR0FBQTtBQUVBLEVBQUEsSUFBSUQsSUFBSSxHQUFHO0lBQ1AsT0FBTyxJQUFJLENBQUNsQixLQUFLLENBQUE7QUFDckIsR0FBQTtBQUNKOzs7OyJ9
