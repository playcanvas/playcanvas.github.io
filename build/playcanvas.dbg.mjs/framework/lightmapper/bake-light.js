/**
 * @license
 * PlayCanvas Engine v1.62.0 revision 818511d2b (DEBUG PROFILER)
 * Copyright 2011-2023 PlayCanvas Ltd. All rights reserved.
 */
import { BoundingBox } from '../../core/shape/bounding-box.js';
import { BoundingSphere } from '../../core/shape/bounding-sphere.js';
import { LIGHTTYPE_DIRECTIONAL } from '../../scene/constants.js';

const tempSphere = new BoundingSphere();

// helper class to store all lights including their original state
class BakeLight {
  constructor(scene, light) {
    this.scene = scene;

    // light of type Light
    this.light = light;

    // original light properties
    this.store();

    // don't use cascades
    light.numCascades = 1;

    // bounds for non-directional light
    if (light.type !== LIGHTTYPE_DIRECTIONAL) {
      // world sphere
      light._node.getWorldTransform();
      light.getBoundingSphere(tempSphere);

      // world aabb
      this.lightBounds = new BoundingBox();
      this.lightBounds.center.copy(tempSphere.center);
      this.lightBounds.halfExtents.set(tempSphere.radius, tempSphere.radius, tempSphere.radius);
    }
  }
  store() {
    this.mask = this.light.mask;
    this.shadowUpdateMode = this.light.shadowUpdateMode;
    this.enabled = this.light.enabled;
    this.intensity = this.light.intensity;
    this.rotation = this.light._node.getLocalRotation().clone();
    this.numCascades = this.light.numCascades;
  }
  restore() {
    const light = this.light;
    light.mask = this.mask;
    light.shadowUpdateMode = this.shadowUpdateMode;
    light.enabled = this.enabled;
    light.intensity = this.intensity;
    light._node.setLocalRotation(this.rotation);
    light.numCascades = this.numCascades;
  }
  startBake() {
    this.light.enabled = true;

    // destroy shadow map the light might have
    this.light._destroyShadowMap();
    this.light.beginFrame();
  }
  endBake(shadowMapCache) {
    const light = this.light;
    light.enabled = false;
    if (light.shadowMap) {
      // return shadow map to the cache
      if (light.shadowMap.cached) shadowMapCache.add(light, light.shadowMap);
      light.shadowMap = null;
    }
  }
}

export { BakeLight };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFrZS1saWdodC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2ZyYW1ld29yay9saWdodG1hcHBlci9iYWtlLWxpZ2h0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJvdW5kaW5nQm94IH0gZnJvbSAnLi4vLi4vY29yZS9zaGFwZS9ib3VuZGluZy1ib3guanMnO1xuaW1wb3J0IHsgQm91bmRpbmdTcGhlcmUgfSBmcm9tICcuLi8uLi9jb3JlL3NoYXBlL2JvdW5kaW5nLXNwaGVyZS5qcyc7XG5pbXBvcnQgeyBMSUdIVFRZUEVfRElSRUNUSU9OQUwgfSBmcm9tICcuLi8uLi9zY2VuZS9jb25zdGFudHMuanMnO1xuXG5jb25zdCB0ZW1wU3BoZXJlID0gbmV3IEJvdW5kaW5nU3BoZXJlKCk7XG5cbi8vIGhlbHBlciBjbGFzcyB0byBzdG9yZSBhbGwgbGlnaHRzIGluY2x1ZGluZyB0aGVpciBvcmlnaW5hbCBzdGF0ZVxuY2xhc3MgQmFrZUxpZ2h0IHtcbiAgICBjb25zdHJ1Y3RvcihzY2VuZSwgbGlnaHQpIHtcblxuICAgICAgICB0aGlzLnNjZW5lID0gc2NlbmU7XG5cbiAgICAgICAgLy8gbGlnaHQgb2YgdHlwZSBMaWdodFxuICAgICAgICB0aGlzLmxpZ2h0ID0gbGlnaHQ7XG5cbiAgICAgICAgLy8gb3JpZ2luYWwgbGlnaHQgcHJvcGVydGllc1xuICAgICAgICB0aGlzLnN0b3JlKCk7XG5cbiAgICAgICAgLy8gZG9uJ3QgdXNlIGNhc2NhZGVzXG4gICAgICAgIGxpZ2h0Lm51bUNhc2NhZGVzID0gMTtcblxuICAgICAgICAvLyBib3VuZHMgZm9yIG5vbi1kaXJlY3Rpb25hbCBsaWdodFxuICAgICAgICBpZiAobGlnaHQudHlwZSAhPT0gTElHSFRUWVBFX0RJUkVDVElPTkFMKSB7XG5cbiAgICAgICAgICAgIC8vIHdvcmxkIHNwaGVyZVxuICAgICAgICAgICAgbGlnaHQuX25vZGUuZ2V0V29ybGRUcmFuc2Zvcm0oKTtcbiAgICAgICAgICAgIGxpZ2h0LmdldEJvdW5kaW5nU3BoZXJlKHRlbXBTcGhlcmUpO1xuXG4gICAgICAgICAgICAvLyB3b3JsZCBhYWJiXG4gICAgICAgICAgICB0aGlzLmxpZ2h0Qm91bmRzID0gbmV3IEJvdW5kaW5nQm94KCk7XG4gICAgICAgICAgICB0aGlzLmxpZ2h0Qm91bmRzLmNlbnRlci5jb3B5KHRlbXBTcGhlcmUuY2VudGVyKTtcbiAgICAgICAgICAgIHRoaXMubGlnaHRCb3VuZHMuaGFsZkV4dGVudHMuc2V0KHRlbXBTcGhlcmUucmFkaXVzLCB0ZW1wU3BoZXJlLnJhZGl1cywgdGVtcFNwaGVyZS5yYWRpdXMpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc3RvcmUoKSB7XG4gICAgICAgIHRoaXMubWFzayA9IHRoaXMubGlnaHQubWFzaztcbiAgICAgICAgdGhpcy5zaGFkb3dVcGRhdGVNb2RlID0gdGhpcy5saWdodC5zaGFkb3dVcGRhdGVNb2RlO1xuICAgICAgICB0aGlzLmVuYWJsZWQgPSB0aGlzLmxpZ2h0LmVuYWJsZWQ7XG4gICAgICAgIHRoaXMuaW50ZW5zaXR5ID0gdGhpcy5saWdodC5pbnRlbnNpdHk7XG4gICAgICAgIHRoaXMucm90YXRpb24gPSB0aGlzLmxpZ2h0Ll9ub2RlLmdldExvY2FsUm90YXRpb24oKS5jbG9uZSgpO1xuICAgICAgICB0aGlzLm51bUNhc2NhZGVzID0gdGhpcy5saWdodC5udW1DYXNjYWRlcztcbiAgICB9XG5cbiAgICByZXN0b3JlKCkge1xuICAgICAgICBjb25zdCBsaWdodCA9IHRoaXMubGlnaHQ7XG4gICAgICAgIGxpZ2h0Lm1hc2sgPSB0aGlzLm1hc2s7XG4gICAgICAgIGxpZ2h0LnNoYWRvd1VwZGF0ZU1vZGUgPSB0aGlzLnNoYWRvd1VwZGF0ZU1vZGU7XG4gICAgICAgIGxpZ2h0LmVuYWJsZWQgPSB0aGlzLmVuYWJsZWQ7XG4gICAgICAgIGxpZ2h0LmludGVuc2l0eSA9IHRoaXMuaW50ZW5zaXR5O1xuICAgICAgICBsaWdodC5fbm9kZS5zZXRMb2NhbFJvdGF0aW9uKHRoaXMucm90YXRpb24pO1xuICAgICAgICBsaWdodC5udW1DYXNjYWRlcyA9IHRoaXMubnVtQ2FzY2FkZXM7XG4gICAgfVxuXG4gICAgc3RhcnRCYWtlKCkge1xuICAgICAgICB0aGlzLmxpZ2h0LmVuYWJsZWQgPSB0cnVlO1xuXG4gICAgICAgIC8vIGRlc3Ryb3kgc2hhZG93IG1hcCB0aGUgbGlnaHQgbWlnaHQgaGF2ZVxuICAgICAgICB0aGlzLmxpZ2h0Ll9kZXN0cm95U2hhZG93TWFwKCk7XG5cbiAgICAgICAgdGhpcy5saWdodC5iZWdpbkZyYW1lKCk7XG4gICAgfVxuXG4gICAgZW5kQmFrZShzaGFkb3dNYXBDYWNoZSkge1xuICAgICAgICBjb25zdCBsaWdodCA9IHRoaXMubGlnaHQ7XG4gICAgICAgIGxpZ2h0LmVuYWJsZWQgPSBmYWxzZTtcblxuICAgICAgICBpZiAobGlnaHQuc2hhZG93TWFwKSB7XG4gICAgICAgICAgICAvLyByZXR1cm4gc2hhZG93IG1hcCB0byB0aGUgY2FjaGVcbiAgICAgICAgICAgIGlmIChsaWdodC5zaGFkb3dNYXAuY2FjaGVkKVxuICAgICAgICAgICAgICAgIHNoYWRvd01hcENhY2hlLmFkZChsaWdodCwgbGlnaHQuc2hhZG93TWFwKTtcblxuICAgICAgICAgICAgbGlnaHQuc2hhZG93TWFwID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IHsgQmFrZUxpZ2h0IH07XG4iXSwibmFtZXMiOlsidGVtcFNwaGVyZSIsIkJvdW5kaW5nU3BoZXJlIiwiQmFrZUxpZ2h0IiwiY29uc3RydWN0b3IiLCJzY2VuZSIsImxpZ2h0Iiwic3RvcmUiLCJudW1DYXNjYWRlcyIsInR5cGUiLCJMSUdIVFRZUEVfRElSRUNUSU9OQUwiLCJfbm9kZSIsImdldFdvcmxkVHJhbnNmb3JtIiwiZ2V0Qm91bmRpbmdTcGhlcmUiLCJsaWdodEJvdW5kcyIsIkJvdW5kaW5nQm94IiwiY2VudGVyIiwiY29weSIsImhhbGZFeHRlbnRzIiwic2V0IiwicmFkaXVzIiwibWFzayIsInNoYWRvd1VwZGF0ZU1vZGUiLCJlbmFibGVkIiwiaW50ZW5zaXR5Iiwicm90YXRpb24iLCJnZXRMb2NhbFJvdGF0aW9uIiwiY2xvbmUiLCJyZXN0b3JlIiwic2V0TG9jYWxSb3RhdGlvbiIsInN0YXJ0QmFrZSIsIl9kZXN0cm95U2hhZG93TWFwIiwiYmVnaW5GcmFtZSIsImVuZEJha2UiLCJzaGFkb3dNYXBDYWNoZSIsInNoYWRvd01hcCIsImNhY2hlZCIsImFkZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBSUEsTUFBTUEsVUFBVSxHQUFHLElBQUlDLGNBQWMsRUFBRSxDQUFBOztBQUV2QztBQUNBLE1BQU1DLFNBQVMsQ0FBQztBQUNaQyxFQUFBQSxXQUFXLENBQUNDLEtBQUssRUFBRUMsS0FBSyxFQUFFO0lBRXRCLElBQUksQ0FBQ0QsS0FBSyxHQUFHQSxLQUFLLENBQUE7O0FBRWxCO0lBQ0EsSUFBSSxDQUFDQyxLQUFLLEdBQUdBLEtBQUssQ0FBQTs7QUFFbEI7SUFDQSxJQUFJLENBQUNDLEtBQUssRUFBRSxDQUFBOztBQUVaO0lBQ0FELEtBQUssQ0FBQ0UsV0FBVyxHQUFHLENBQUMsQ0FBQTs7QUFFckI7QUFDQSxJQUFBLElBQUlGLEtBQUssQ0FBQ0csSUFBSSxLQUFLQyxxQkFBcUIsRUFBRTtBQUV0QztBQUNBSixNQUFBQSxLQUFLLENBQUNLLEtBQUssQ0FBQ0MsaUJBQWlCLEVBQUUsQ0FBQTtBQUMvQk4sTUFBQUEsS0FBSyxDQUFDTyxpQkFBaUIsQ0FBQ1osVUFBVSxDQUFDLENBQUE7O0FBRW5DO0FBQ0EsTUFBQSxJQUFJLENBQUNhLFdBQVcsR0FBRyxJQUFJQyxXQUFXLEVBQUUsQ0FBQTtNQUNwQyxJQUFJLENBQUNELFdBQVcsQ0FBQ0UsTUFBTSxDQUFDQyxJQUFJLENBQUNoQixVQUFVLENBQUNlLE1BQU0sQ0FBQyxDQUFBO0FBQy9DLE1BQUEsSUFBSSxDQUFDRixXQUFXLENBQUNJLFdBQVcsQ0FBQ0MsR0FBRyxDQUFDbEIsVUFBVSxDQUFDbUIsTUFBTSxFQUFFbkIsVUFBVSxDQUFDbUIsTUFBTSxFQUFFbkIsVUFBVSxDQUFDbUIsTUFBTSxDQUFDLENBQUE7QUFDN0YsS0FBQTtBQUNKLEdBQUE7QUFFQWIsRUFBQUEsS0FBSyxHQUFHO0FBQ0osSUFBQSxJQUFJLENBQUNjLElBQUksR0FBRyxJQUFJLENBQUNmLEtBQUssQ0FBQ2UsSUFBSSxDQUFBO0FBQzNCLElBQUEsSUFBSSxDQUFDQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUNoQixLQUFLLENBQUNnQixnQkFBZ0IsQ0FBQTtBQUNuRCxJQUFBLElBQUksQ0FBQ0MsT0FBTyxHQUFHLElBQUksQ0FBQ2pCLEtBQUssQ0FBQ2lCLE9BQU8sQ0FBQTtBQUNqQyxJQUFBLElBQUksQ0FBQ0MsU0FBUyxHQUFHLElBQUksQ0FBQ2xCLEtBQUssQ0FBQ2tCLFNBQVMsQ0FBQTtBQUNyQyxJQUFBLElBQUksQ0FBQ0MsUUFBUSxHQUFHLElBQUksQ0FBQ25CLEtBQUssQ0FBQ0ssS0FBSyxDQUFDZSxnQkFBZ0IsRUFBRSxDQUFDQyxLQUFLLEVBQUUsQ0FBQTtBQUMzRCxJQUFBLElBQUksQ0FBQ25CLFdBQVcsR0FBRyxJQUFJLENBQUNGLEtBQUssQ0FBQ0UsV0FBVyxDQUFBO0FBQzdDLEdBQUE7QUFFQW9CLEVBQUFBLE9BQU8sR0FBRztBQUNOLElBQUEsTUFBTXRCLEtBQUssR0FBRyxJQUFJLENBQUNBLEtBQUssQ0FBQTtBQUN4QkEsSUFBQUEsS0FBSyxDQUFDZSxJQUFJLEdBQUcsSUFBSSxDQUFDQSxJQUFJLENBQUE7QUFDdEJmLElBQUFBLEtBQUssQ0FBQ2dCLGdCQUFnQixHQUFHLElBQUksQ0FBQ0EsZ0JBQWdCLENBQUE7QUFDOUNoQixJQUFBQSxLQUFLLENBQUNpQixPQUFPLEdBQUcsSUFBSSxDQUFDQSxPQUFPLENBQUE7QUFDNUJqQixJQUFBQSxLQUFLLENBQUNrQixTQUFTLEdBQUcsSUFBSSxDQUFDQSxTQUFTLENBQUE7SUFDaENsQixLQUFLLENBQUNLLEtBQUssQ0FBQ2tCLGdCQUFnQixDQUFDLElBQUksQ0FBQ0osUUFBUSxDQUFDLENBQUE7QUFDM0NuQixJQUFBQSxLQUFLLENBQUNFLFdBQVcsR0FBRyxJQUFJLENBQUNBLFdBQVcsQ0FBQTtBQUN4QyxHQUFBO0FBRUFzQixFQUFBQSxTQUFTLEdBQUc7QUFDUixJQUFBLElBQUksQ0FBQ3hCLEtBQUssQ0FBQ2lCLE9BQU8sR0FBRyxJQUFJLENBQUE7O0FBRXpCO0FBQ0EsSUFBQSxJQUFJLENBQUNqQixLQUFLLENBQUN5QixpQkFBaUIsRUFBRSxDQUFBO0FBRTlCLElBQUEsSUFBSSxDQUFDekIsS0FBSyxDQUFDMEIsVUFBVSxFQUFFLENBQUE7QUFDM0IsR0FBQTtFQUVBQyxPQUFPLENBQUNDLGNBQWMsRUFBRTtBQUNwQixJQUFBLE1BQU01QixLQUFLLEdBQUcsSUFBSSxDQUFDQSxLQUFLLENBQUE7SUFDeEJBLEtBQUssQ0FBQ2lCLE9BQU8sR0FBRyxLQUFLLENBQUE7SUFFckIsSUFBSWpCLEtBQUssQ0FBQzZCLFNBQVMsRUFBRTtBQUNqQjtBQUNBLE1BQUEsSUFBSTdCLEtBQUssQ0FBQzZCLFNBQVMsQ0FBQ0MsTUFBTSxFQUN0QkYsY0FBYyxDQUFDRyxHQUFHLENBQUMvQixLQUFLLEVBQUVBLEtBQUssQ0FBQzZCLFNBQVMsQ0FBQyxDQUFBO01BRTlDN0IsS0FBSyxDQUFDNkIsU0FBUyxHQUFHLElBQUksQ0FBQTtBQUMxQixLQUFBO0FBQ0osR0FBQTtBQUNKOzs7OyJ9
