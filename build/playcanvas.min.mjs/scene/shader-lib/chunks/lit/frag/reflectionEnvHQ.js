var e="\n#ifndef ENV_ATLAS\n#define ENV_ATLAS\nuniform sampler2D texture_envAtlas;\n#endif\nuniform samplerCube texture_cubeMap;\nuniform float material_reflectivity;\n\nvec3 calcReflection(vec3 reflDir, float gloss) {\n\t\tvec3 dir = cubeMapProject(reflDir) * vec3(-1.0, 1.0, 1.0);\n\t\tvec2 uv = toSphericalUv(dir);\n\n\t\t// calculate roughness level\n\t\tfloat level = saturate(1.0 - gloss) * 5.0;\n\t\tfloat ilevel = floor(level);\n\t\tfloat flevel = level - ilevel;\n\n\t\tvec3 sharp = $DECODE(textureCube(texture_cubeMap, fixSeams(dir)));\n\t\tvec3 roughA = $DECODE(texture2D(texture_envAtlas, mapRoughnessUv(uv, ilevel)));\n\t\tvec3 roughB = $DECODE(texture2D(texture_envAtlas, mapRoughnessUv(uv, ilevel + 1.0)));\n\n\t\treturn processEnvironment(mix(sharp, mix(roughA, roughB, flevel), min(level, 1.0)));\n}\n\nvoid addReflection(vec3 reflDir, float gloss) {   \n\t\tdReflection += vec4(calcReflection(reflDir, gloss), material_reflectivity);\n}\n";export{e as default};
